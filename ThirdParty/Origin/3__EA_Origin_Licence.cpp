/*
	DENUVO_Profiler v0.3
	--------------------
	CRACKLAB, ELF
	--------------------
	Tiberium reversing
	********************
	2011	-	2024
*/

#include "../../stdafx.h"
#include "3__EA_Origin_Licence.h"
//3rd pary code
//******************************************//
//À»÷≈Õ«»ﬂ Origin
//******************************************//

DWORD qtable_shift_byte_2[] =
{
0x50A7F451, 0x5365417E, 0xC3A4171A, 0x965E273A, 0xCB6BAB3B, 0xF1459D1F, 0xAB58FAAC, 0x9303E34B,
0x55FA3020, 0xF66D76AD, 0x9176CC88, 0x254C02F5, 0xFCD7E54F, 0xD7CB2AC5, 0x80443526, 0x8FA362B5,
0x495AB1DE, 0x671BBA25, 0x980EEA45, 0xE1C0FE5D, 0x02752FC3, 0x12F04C81, 0xA397468D, 0xC6F9D36B,
0xE75F8F03, 0x959C9215, 0xEB7A6DBF, 0xDA595295, 0x2D83BED4, 0xD3217458, 0x2969E049, 0x44C8C98E,
0x6A89C275, 0x78798EF4, 0x6B3E5899, 0xDD71B927, 0xB64FE1BE, 0x17AD88F0, 0x66AC20C9, 0xB43ACE7D,
0x184ADF63, 0x82311AE5, 0x60335197, 0x457F5362, 0xE07764B1, 0x84AE6BBB, 0x1CA081FE, 0x942B08F9,
0x58684870, 0x19FD458F, 0x876CDE94, 0xB7F87B52, 0x23D373AB, 0xE2024B72, 0x578F1FE3, 0x2AAB5566,
0x0728EBB2, 0x03C2B52F, 0x9A7BC586, 0xA50837D3, 0xF2872830, 0xB2A5BF23, 0xBA6A0302, 0x5C8216ED,
0x2B1CCF8A, 0x92B479A7, 0xF0F207F3, 0xA1E2694E, 0xCDF4DA65, 0xD5BE0506, 0x1F6234D1, 0x8AFEA6C4,
0x9D532E34, 0xA055F3A2, 0x32E18A05, 0x75EBF6A4, 0x39EC830B, 0xAAEF6040, 0x069F715E, 0x51106EBD,
0xF98A213E, 0x3D06DD96, 0xAE053EDD, 0x46BDE64D, 0xB58D5491, 0x055DC471, 0x6FD40604, 0xFF155060,
0x24FB9819, 0x97E9BDD6, 0xCC434089, 0x779ED967, 0xBD42E8B0, 0x888B8907, 0x385B19E7, 0xDBEEC879,
0x470A7CA1, 0xE90F427C, 0xC91E84F8, 0x00000000, 0x83868009, 0x48ED2B32, 0xAC70111E, 0x4E725A6C,
0xFBFF0EFD, 0x5638850F, 0x1ED5AE3D, 0x27392D36, 0x64D90F0A, 0x21A65C68, 0xD1545B9B, 0x3A2E3624,
0xB1670A0C, 0x0FE75793, 0xD296EEB4, 0x9E919B1B, 0x4FC5C080, 0xA220DC61, 0x694B775A, 0x161A121C,
0x0ABA93E2, 0xE52AA0C0, 0x43E0223C, 0x1D171B12, 0x0B0D090E, 0xADC78BF2, 0xB9A8B62D, 0xC8A91E14,
0x8519F157, 0x4C0775AF, 0xBBDD99EE, 0xFD607FA3, 0x9F2601F7, 0xBCF5725C, 0xC53B6644, 0x347EFB5B,
0x7629438B, 0xDCC623CB, 0x68FCEDB6, 0x63F1E4B8, 0xCADC31D7, 0x10856342, 0x40229713, 0x2011C684,
0x7D244A85, 0xF83DBBD2, 0x1132F9AE, 0x6DA129C7, 0x4B2F9E1D, 0xF330B2DC, 0xEC52860D, 0xD0E3C177,
0x6C16B32B, 0x99B970A9, 0xFA489411, 0x2264E947, 0xC48CFCA8, 0x1A3FF0A0, 0xD82C7D56, 0xEF903322,
0xC74E4987, 0xC1D138D9, 0xFEA2CA8C, 0x360BD498, 0xCF81F5A6, 0x28DE7AA5, 0x268EB7DA, 0xA4BFAD3F,
0xE49D3A2C, 0x0D927850, 0x9BCC5F6A, 0x62467E54, 0xC2138DF6, 0xE8B8D890, 0x5EF7392E, 0xF5AFC382,
0xBE805D9F, 0x7C93D069, 0xA92DD56F, 0xB31225CF, 0x3B99ACC8, 0xA77D1810, 0x6E639CE8, 0x7BBB3BDB,
0x097826CD, 0xF418596E, 0x01B79AEC, 0xA89A4F83, 0x656E95E6, 0x7EE6FFAA, 0x08CFBC21, 0xE6E815EF,
0xD99BE7BA, 0xCE366F4A, 0xD4099FEA, 0xD67CB029, 0xAFB2A431, 0x31233F2A, 0x3094A5C6, 0xC066A235,
0x37BC4E74, 0xA6CA82FC, 0xB0D090E0, 0x15D8A733, 0x4A9804F1, 0xF7DAEC41, 0x0E50CD7F, 0x2FF69117,
0x8DD64D76, 0x4DB0EF43, 0x544DAACC, 0xDF0496E4, 0xE3B5D19E, 0x1B886A4C, 0xB81F2CC1, 0x7F516546,
0x04EA5E9D, 0x5D358C01, 0x737487FA, 0x2E410BFB, 0x5A1D67B3, 0x52D2DB92, 0x335610E9, 0x1347D66D,
0x8C61D79A, 0x7A0CA137, 0x8E14F859, 0x893C13EB, 0xEE27A9CE, 0x35C961B7, 0xEDE51CE1, 0x3CB1477A,
0x59DFD29C, 0x3F73F255, 0x79CE1418, 0xBF37C773, 0xEACDF753, 0x5BAAFD5F, 0x146F3DDF, 0x86DB4478,
0x81F3AFCA, 0x3EC468B9, 0x2C342438, 0x5F40A3C2, 0x72C31D16, 0x0C25E2BC, 0x8B493C28, 0x41950DFF,
0x7101A839, 0xDEB30C08, 0x9CE4B4D8, 0x90C15664, 0x6184CB7B, 0x70B632D5, 0x745C6C48, 0x4257B8D0,
0x00000000
};

DWORD qtable_shift8_2[] = 
{
0xA7F45150, 0x65417E53, 0xA4171AC3, 0x5E273A96, 0x6BAB3BCB, 0x459D1FF1, 0x58FAACAB, 0x03E34B93,
0xFA302055, 0x6D76ADF6, 0x76CC8891, 0x4C02F525, 0xD7E54FFC, 0xCB2AC5D7, 0x44352680, 0xA362B58F,
0x5AB1DE49, 0x1BBA2567, 0x0EEA4598, 0xC0FE5DE1, 0x752FC302, 0xF04C8112, 0x97468DA3, 0xF9D36BC6,
0x5F8F03E7, 0x9C921595, 0x7A6DBFEB, 0x595295DA, 0x83BED42D, 0x217458D3, 0x69E04929, 0xC8C98E44,
0x89C2756A, 0x798EF478, 0x3E58996B, 0x71B927DD, 0x4FE1BEB6, 0xAD88F017, 0xAC20C966, 0x3ACE7DB4,
0x4ADF6318, 0x311AE582, 0x33519760, 0x7F536245, 0x7764B1E0, 0xAE6BBB84, 0xA081FE1C, 0x2B08F994,
0x68487058, 0xFD458F19, 0x6CDE9487, 0xF87B52B7, 0xD373AB23, 0x024B72E2, 0x8F1FE357, 0xAB55662A,
0x28EBB207, 0xC2B52F03, 0x7BC5869A, 0x0837D3A5, 0x872830F2, 0xA5BF23B2, 0x6A0302BA, 0x8216ED5C,
0x1CCF8A2B, 0xB479A792, 0xF207F3F0, 0xE2694EA1, 0xF4DA65CD, 0xBE0506D5, 0x6234D11F, 0xFEA6C48A,
0x532E349D, 0x55F3A2A0, 0xE18A0532, 0xEBF6A475, 0xEC830B39, 0xEF6040AA, 0x9F715E06, 0x106EBD51,
0x8A213EF9, 0x06DD963D, 0x053EDDAE, 0xBDE64D46, 0x8D5491B5, 0x5DC47105, 0xD406046F, 0x155060FF,
0xFB981924, 0xE9BDD697, 0x434089CC, 0x9ED96777, 0x42E8B0BD, 0x8B890788, 0x5B19E738, 0xEEC879DB,
0x0A7CA147, 0x0F427CE9, 0x1E84F8C9, 0x00000000, 0x86800983, 0xED2B3248, 0x70111EAC, 0x725A6C4E,
0xFF0EFDFB, 0x38850F56, 0xD5AE3D1E, 0x392D3627, 0xD90F0A64, 0xA65C6821, 0x545B9BD1, 0x2E36243A,
0x670A0CB1, 0xE757930F, 0x96EEB4D2, 0x919B1B9E, 0xC5C0804F, 0x20DC61A2, 0x4B775A69, 0x1A121C16,
0xBA93E20A, 0x2AA0C0E5, 0xE0223C43, 0x171B121D, 0x0D090E0B, 0xC78BF2AD, 0xA8B62DB9, 0xA91E14C8,
0x19F15785, 0x0775AF4C, 0xDD99EEBB, 0x607FA3FD, 0x2601F79F, 0xF5725CBC, 0x3B6644C5, 0x7EFB5B34,
0x29438B76, 0xC623CBDC, 0xFCEDB668, 0xF1E4B863, 0xDC31D7CA, 0x85634210, 0x22971340, 0x11C68420,
0x244A857D, 0x3DBBD2F8, 0x32F9AE11, 0xA129C76D, 0x2F9E1D4B, 0x30B2DCF3, 0x52860DEC, 0xE3C177D0,
0x16B32B6C, 0xB970A999, 0x489411FA, 0x64E94722, 0x8CFCA8C4, 0x3FF0A01A, 0x2C7D56D8, 0x903322EF,
0x4E4987C7, 0xD138D9C1, 0xA2CA8CFE, 0x0BD49836, 0x81F5A6CF, 0xDE7AA528, 0x8EB7DA26, 0xBFAD3FA4,
0x9D3A2CE4, 0x9278500D, 0xCC5F6A9B, 0x467E5462, 0x138DF6C2, 0xB8D890E8, 0xF7392E5E, 0xAFC382F5,
0x805D9FBE, 0x93D0697C, 0x2DD56FA9, 0x1225CFB3, 0x99ACC83B, 0x7D1810A7, 0x639CE86E, 0xBB3BDB7B,
0x7826CD09, 0x18596EF4, 0xB79AEC01, 0x9A4F83A8, 0x6E95E665, 0xE6FFAA7E, 0xCFBC2108, 0xE815EFE6,
0x9BE7BAD9, 0x366F4ACE, 0x099FEAD4, 0x7CB029D6, 0xB2A431AF, 0x233F2A31, 0x94A5C630, 0x66A235C0,
0xBC4E7437, 0xCA82FCA6, 0xD090E0B0, 0xD8A73315, 0x9804F14A, 0xDAEC41F7, 0x50CD7F0E, 0xF691172F,
0xD64D768D, 0xB0EF434D, 0x4DAACC54, 0x0496E4DF, 0xB5D19EE3, 0x886A4C1B, 0x1F2CC1B8, 0x5165467F,
0xEA5E9D04, 0x358C015D, 0x7487FA73, 0x410BFB2E, 0x1D67B35A, 0xD2DB9252, 0x5610E933, 0x47D66D13,
0x61D79A8C, 0x0CA1377A, 0x14F8598E, 0x3C13EB89, 0x27A9CEEE, 0xC961B735, 0xE51CE1ED, 0xB1477A3C,
0xDFD29C59, 0x73F2553F, 0xCE141879, 0x37C773BF, 0xCDF753EA, 0xAAFD5F5B, 0x6F3DDF14, 0xDB447886,
0xF3AFCA81, 0xC468B93E, 0x3424382C, 0x40A3C25F, 0xC31D1672, 0x25E2BC0C, 0x493C288B, 0x950DFF41,
0x01A83971, 0xB30C08DE, 0xE4B4D89C, 0xC1566490, 0x84CB7B61, 0xB632D570, 0x5C6C4874, 0x57B8D042
};


DWORD qtable_shift16_2[] = 
{
0xF45150A7, 0x417E5365, 0x171AC3A4, 0x273A965E, 0xAB3BCB6B, 0x9D1FF145, 0xFAACAB58, 0xE34B9303,
0x302055FA, 0x76ADF66D, 0xCC889176, 0x02F5254C, 0xE54FFCD7, 0x2AC5D7CB, 0x35268044, 0x62B58FA3,
0xB1DE495A, 0xBA25671B, 0xEA45980E, 0xFE5DE1C0, 0x2FC30275, 0x4C8112F0, 0x468DA397, 0xD36BC6F9,
0x8F03E75F, 0x9215959C, 0x6DBFEB7A, 0x5295DA59, 0xBED42D83, 0x7458D321, 0xE0492969, 0xC98E44C8,
0xC2756A89, 0x8EF47879, 0x58996B3E, 0xB927DD71, 0xE1BEB64F, 0x88F017AD, 0x20C966AC, 0xCE7DB43A,
0xDF63184A, 0x1AE58231, 0x51976033, 0x5362457F, 0x64B1E077, 0x6BBB84AE, 0x81FE1CA0, 0x08F9942B,
0x48705868, 0x458F19FD, 0xDE94876C, 0x7B52B7F8, 0x73AB23D3, 0x4B72E202, 0x1FE3578F, 0x55662AAB,
0xEBB20728, 0xB52F03C2, 0xC5869A7B, 0x37D3A508, 0x2830F287, 0xBF23B2A5, 0x0302BA6A, 0x16ED5C82,
0xCF8A2B1C, 0x79A792B4, 0x07F3F0F2, 0x694EA1E2, 0xDA65CDF4, 0x0506D5BE, 0x34D11F62, 0xA6C48AFE,
0x2E349D53, 0xF3A2A055, 0x8A0532E1, 0xF6A475EB, 0x830B39EC, 0x6040AAEF, 0x715E069F, 0x6EBD5110,
0x213EF98A, 0xDD963D06, 0x3EDDAE05, 0xE64D46BD, 0x5491B58D, 0xC471055D, 0x06046FD4, 0x5060FF15,
0x981924FB, 0xBDD697E9, 0x4089CC43, 0xD967779E, 0xE8B0BD42, 0x8907888B, 0x19E7385B, 0xC879DBEE,
0x7CA1470A, 0x427CE90F, 0x84F8C91E, 0x00000000, 0x80098386, 0x2B3248ED, 0x111EAC70, 0x5A6C4E72,
0x0EFDFBFF, 0x850F5638, 0xAE3D1ED5, 0x2D362739, 0x0F0A64D9, 0x5C6821A6, 0x5B9BD154, 0x36243A2E,
0x0A0CB167, 0x57930FE7, 0xEEB4D296, 0x9B1B9E91, 0xC0804FC5, 0xDC61A220, 0x775A694B, 0x121C161A,
0x93E20ABA, 0xA0C0E52A, 0x223C43E0, 0x1B121D17, 0x090E0B0D, 0x8BF2ADC7, 0xB62DB9A8, 0x1E14C8A9,
0xF1578519, 0x75AF4C07, 0x99EEBBDD, 0x7FA3FD60, 0x01F79F26, 0x725CBCF5, 0x6644C53B, 0xFB5B347E,
0x438B7629, 0x23CBDCC6, 0xEDB668FC, 0xE4B863F1, 0x31D7CADC, 0x63421085, 0x97134022, 0xC6842011,
0x4A857D24, 0xBBD2F83D, 0xF9AE1132, 0x29C76DA1, 0x9E1D4B2F, 0xB2DCF330, 0x860DEC52, 0xC177D0E3,
0xB32B6C16, 0x70A999B9, 0x9411FA48, 0xE9472264, 0xFCA8C48C, 0xF0A01A3F, 0x7D56D82C, 0x3322EF90,
0x4987C74E, 0x38D9C1D1, 0xCA8CFEA2, 0xD498360B, 0xF5A6CF81, 0x7AA528DE, 0xB7DA268E, 0xAD3FA4BF,
0x3A2CE49D, 0x78500D92, 0x5F6A9BCC, 0x7E546246, 0x8DF6C213, 0xD890E8B8, 0x392E5EF7, 0xC382F5AF,
0x5D9FBE80, 0xD0697C93, 0xD56FA92D, 0x25CFB312, 0xACC83B99, 0x1810A77D, 0x9CE86E63, 0x3BDB7BBB,
0x26CD0978, 0x596EF418, 0x9AEC01B7, 0x4F83A89A, 0x95E6656E, 0xFFAA7EE6, 0xBC2108CF, 0x15EFE6E8,
0xE7BAD99B, 0x6F4ACE36, 0x9FEAD409, 0xB029D67C, 0xA431AFB2, 0x3F2A3123, 0xA5C63094, 0xA235C066,
0x4E7437BC, 0x82FCA6CA, 0x90E0B0D0, 0xA73315D8, 0x04F14A98, 0xEC41F7DA, 0xCD7F0E50, 0x91172FF6,
0x4D768DD6, 0xEF434DB0, 0xAACC544D, 0x96E4DF04, 0xD19EE3B5, 0x6A4C1B88, 0x2CC1B81F, 0x65467F51,
0x5E9D04EA, 0x8C015D35, 0x87FA7374, 0x0BFB2E41, 0x67B35A1D, 0xDB9252D2, 0x10E93356, 0xD66D1347,
0xD79A8C61, 0xA1377A0C, 0xF8598E14, 0x13EB893C, 0xA9CEEE27, 0x61B735C9, 0x1CE1EDE5, 0x477A3CB1,
0xD29C59DF, 0xF2553F73, 0x141879CE, 0xC773BF37, 0xF753EACD, 0xFD5F5BAA, 0x3DDF146F, 0x447886DB,
0xAFCA81F3, 0x68B93EC4, 0x24382C34, 0xA3C25F40, 0x1D1672C3, 0xE2BC0C25, 0x3C288B49, 0x0DFF4195,
0xA8397101, 0x0C08DEB3, 0xB4D89CE4, 0x566490C1, 0xCB7B6184, 0x32D570B6, 0x6C48745C, 0xB8D04257,
0xCCCCCC00
};

DWORD qtable_shift24_2[] = 
{
0x5150A7F4, 0x7E536541, 0x1AC3A417, 0x3A965E27, 0x3BCB6BAB, 0x1FF1459D, 0xACAB58FA, 0x4B9303E3,
0x2055FA30, 0xADF66D76, 0x889176CC, 0xF5254C02, 0x4FFCD7E5, 0xC5D7CB2A, 0x26804435, 0xB58FA362,
0xDE495AB1, 0x25671BBA, 0x45980EEA, 0x5DE1C0FE, 0xC302752F, 0x8112F04C, 0x8DA39746, 0x6BC6F9D3,
0x03E75F8F, 0x15959C92, 0xBFEB7A6D, 0x95DA5952, 0xD42D83BE, 0x58D32174, 0x492969E0, 0x8E44C8C9,
0x756A89C2, 0xF478798E, 0x996B3E58, 0x27DD71B9, 0xBEB64FE1, 0xF017AD88, 0xC966AC20, 0x7DB43ACE,
0x63184ADF, 0xE582311A, 0x97603351, 0x62457F53, 0xB1E07764, 0xBB84AE6B, 0xFE1CA081, 0xF9942B08,
0x70586848, 0x8F19FD45, 0x94876CDE, 0x52B7F87B, 0xAB23D373, 0x72E2024B, 0xE3578F1F, 0x662AAB55,
0xB20728EB, 0x2F03C2B5, 0x869A7BC5, 0xD3A50837, 0x30F28728, 0x23B2A5BF, 0x02BA6A03, 0xED5C8216,
0x8A2B1CCF, 0xA792B479, 0xF3F0F207, 0x4EA1E269, 0x65CDF4DA, 0x06D5BE05, 0xD11F6234, 0xC48AFEA6,
0x349D532E, 0xA2A055F3, 0x0532E18A, 0xA475EBF6, 0x0B39EC83, 0x40AAEF60, 0x5E069F71, 0xBD51106E,
0x3EF98A21, 0x963D06DD, 0xDDAE053E, 0x4D46BDE6, 0x91B58D54, 0x71055DC4, 0x046FD406, 0x60FF1550,
0x1924FB98, 0xD697E9BD, 0x89CC4340, 0x67779ED9, 0xB0BD42E8, 0x07888B89, 0xE7385B19, 0x79DBEEC8,
0xA1470A7C, 0x7CE90F42, 0xF8C91E84, 0x00000000, 0x09838680, 0x3248ED2B, 0x1EAC7011, 0x6C4E725A,
0xFDFBFF0E, 0x0F563885, 0x3D1ED5AE, 0x3627392D, 0x0A64D90F, 0x6821A65C, 0x9BD1545B, 0x243A2E36,
0x0CB1670A, 0x930FE757, 0xB4D296EE, 0x1B9E919B, 0x804FC5C0, 0x61A220DC, 0x5A694B77, 0x1C161A12,
0xE20ABA93, 0xC0E52AA0, 0x3C43E022, 0x121D171B, 0x0E0B0D09, 0xF2ADC78B, 0x2DB9A8B6, 0x14C8A91E,
0x578519F1, 0xAF4C0775, 0xEEBBDD99, 0xA3FD607F, 0xF79F2601, 0x5CBCF572, 0x44C53B66, 0x5B347EFB,
0x8B762943, 0xCBDCC623, 0xB668FCED, 0xB863F1E4, 0xD7CADC31, 0x42108563, 0x13402297, 0x842011C6,
0x857D244A, 0xD2F83DBB, 0xAE1132F9, 0xC76DA129, 0x1D4B2F9E, 0xDCF330B2, 0x0DEC5286, 0x77D0E3C1,
0x2B6C16B3, 0xA999B970, 0x11FA4894, 0x472264E9, 0xA8C48CFC, 0xA01A3FF0, 0x56D82C7D, 0x22EF9033,
0x87C74E49, 0xD9C1D138, 0x8CFEA2CA, 0x98360BD4, 0xA6CF81F5, 0xA528DE7A, 0xDA268EB7, 0x3FA4BFAD,
0x2CE49D3A, 0x500D9278, 0x6A9BCC5F, 0x5462467E, 0xF6C2138D, 0x90E8B8D8, 0x2E5EF739, 0x82F5AFC3,
0x9FBE805D, 0x697C93D0, 0x6FA92DD5, 0xCFB31225, 0xC83B99AC, 0x10A77D18, 0xE86E639C, 0xDB7BBB3B,
0xCD097826, 0x6EF41859, 0xEC01B79A, 0x83A89A4F, 0xE6656E95, 0xAA7EE6FF, 0x2108CFBC, 0xEFE6E815,
0xBAD99BE7, 0x4ACE366F, 0xEAD4099F, 0x29D67CB0, 0x31AFB2A4, 0x2A31233F, 0xC63094A5, 0x35C066A2,
0x7437BC4E, 0xFCA6CA82, 0xE0B0D090, 0x3315D8A7, 0xF14A9804, 0x41F7DAEC, 0x7F0E50CD, 0x172FF691,
0x768DD64D, 0x434DB0EF, 0xCC544DAA, 0xE4DF0496, 0x9EE3B5D1, 0x4C1B886A, 0xC1B81F2C, 0x467F5165,
0x9D04EA5E, 0x015D358C, 0xFA737487, 0xFB2E410B, 0xB35A1D67, 0x9252D2DB, 0xE9335610, 0x6D1347D6,
0x9A8C61D7, 0x377A0CA1, 0x598E14F8, 0xEB893C13, 0xCEEE27A9, 0xB735C961, 0xE1EDE51C, 0x7A3CB147,
0x9C59DFD2, 0x553F73F2, 0x1879CE14, 0x73BF37C7, 0x53EACDF7, 0x5F5BAAFD, 0xDF146F3D, 0x7886DB44,
0xCA81F3AF, 0xB93EC468, 0x382C3424, 0xC25F40A3, 0x1672C31D, 0xBC0C25E2, 0x288B493C, 0xFF41950D,
0x397101A8, 0x08DEB30C, 0xD89CE4B4, 0x6490C156, 0x7B6184CB, 0xD570B632, 0x48745C6C, 0xD04257B8,
0x590E4289
};

DWORD qtable_def_2[] = 
{
0xD56A0952, 0x38A53630, 0x9EA340BF, 0xFBD7F381, 0x8239E37C, 0x87FF2F9B, 0x44438E34, 0xCBE9DEC4,
0x32947B54, 0x3D23C2A6, 0x0B954CEE, 0x4EC3FA42, 0x66A12E08, 0xB224D928, 0x49A25B76, 0x25D18B6D,
0x64F6F872, 0x16986886, 0xCC5CA4D4, 0x92B6655D, 0x5048706C, 0xDAB9EDFD, 0x5746155E, 0x849D8DA7,
0x00ABD890, 0x0AD3BC8C, 0x0558E4F7, 0x0645B3B8, 0x8F1E2CD0, 0x020F3FCA, 0x03BDAFC1, 0x6B8A1301,
0x4111913A, 0xEADC674F, 0xCECFF297, 0x73E6B4F0, 0x2274AC96, 0x8535ADE7, 0xE837F9E2, 0x6EDF751C,
0x711AF147, 0x89C5291D, 0x0E62B76F, 0x1BBE18AA, 0x4B3E56FC, 0x2079D2C6, 0xFEC0DB9A, 0xF45ACD78,
0x33A8DD1F, 0x31C70788, 0x591012B1, 0x5FEC8027, 0xA97F5160, 0x0D4AB519, 0x9F7AE52D, 0xEF9CC993,
0x4D3BE0A0, 0xB0F52AAE, 0x3CBBEBC8, 0x61995383, 0x7E042B17, 0x26D677BA, 0x631469E1, 0x7D0C2155,
0x245C8B48, 0xD8894C08, 0xCCCCCCC3, 0x001F0FCC, 0x1042B60F, 0x18498D4C, 0x83CB8949, 0x894901E0,
0x48D8F7D2, 0xC0FF4898, 0x10420148, 0x480A8948, 0x4D084A89, 0xC930018B, 0x74D8394D, 0x528B483A,
0x408B4918, 0xC1894D18, 0x76D03948, 0xA20FB814, 0x808DE7FF, 0x18005DF2, 0x00000CEB, 0xAAA80000,
0x83327327, 0xC085FFC8, 0x0FD1980F, 0x8B4DC1B6, 0x394DC004, 0x41CA75D8, 0x1042B60F, 0x4C01E083,
0x8949C801, 0xB60F1042, 0x14894DC1, 0xC3C031C1, 0x40A30EE0, 0xC0894CF0, 0x000000C3, 0xCCCCCCCC,
0xCCCCCCCC, 0x2E6666CC, 0x00841F0F, 0x00000000, 0x245C8948, 0x6C894808, 0x89481024, 0x57182474,
0x20EC8348, 0x1042B60F, 0x18718D48, 0x83CD8948, 0x894801E0, 0x48D8F7D7, 0xC0FF4898, 0x10420148,
0x480A8948, 0x48084A89, 0xC9301E8B, 0x74EB3948, 0xFA894821, 0x48D98948, 0xD1E8DE89, 0x85000019,
0x0F3F74C0, 0xB60FD198, 0x1C8B48C1, 0xEB3948C3, 0xB60FDF75, 0xE0831047, 0xF0014801, 0x10478948,
0x48C1B60F, 0x31C63C89, 0x5C8B48C0, 0x8B483024, 0x4838246C, 0x4024748B, 0x20C48348, 0x2333C35F,
0x894811A0, 0xE6E2EBD8, 0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x2E6666CC, 0x00841F0F, 0x00000000,
0x244C8948, 0x83485708, 0xC74850EC, 0xFE402444, 0x48FFFFFF, 0x68245C89, 0xE8CF8948, 0xFFBC9F10,
0xE8C38948, 0xFFBCA028, 0xC7C28948, 0x00302444, 0x48000000, 0x28245C89, 0x202444C7, 0x00000001,
0xA20FB941, 0x8D4CC34E, 0xD0526B05, 0xF98948FE, 0xF2898D45, 0xE83CB15D, 0xFFBC4A74, 0x058D4890,
0xFED05144, 0x83078948, 0x0000FC8F, 0x8D480200, 0x96003B15, 0xF98948FF, 0xBD0D03E8, 0x158D48FF,
0xFF96003C, 0xE8F98948, 0xFFBD1084, 0x3D158D48, 0x48FF9600, 0x95E8F989, 0x90FFBD10, 0x48F88948,
0x68245C8B, 0x50C48348, 0x02E5C35F, 0xCC40BFF6, 0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x00401F0F,
0xEC834853, 0xCB894820, 0xF97663E8, 0x89C031FF, 0x89481843, 0x43892043, 0x43894828, 0x38438930,
0x40438948, 0x48484389, 0x89504389, 0x89485843, 0x43896043, 0x43894868, 0x78438970, 0x80838948,
0x89000000, 0x00008883, 0x83894800, 0x00000090, 0x00988389, 0x89480000, 0x0000A083, 0xA8838900,
0x48000000, 0x00B08389, 0x83890000, 0x000000B8, 0xC0838948, 0x89000000, 0x0000C883, 0x83894800,
0x000000D0, 0x00D88389, 0x89480000, 0x0000E083, 0xE8838900, 0x48000000, 0x00F08389, 0x83890000,
0x000000F8, 0x00838948, 0x89000001, 0x00010883, 0x83894800, 0x00000110, 0x01188389, 0x89480000,
0x00012083, 0x28838900, 0x48000001, 0x01308389, 0x83890000, 0x00000138, 0x40838948, 0x89000001,
0x00014883
};

DWORD qtable_shift_byte[] =
{
0xA56363C6, 0x847C7CF8, 0x997777EE, 0x8D7B7BF6, 0x0DF2F2FF, 0xBD6B6BD6, 0xB16F6FDE, 0x54C5C591,
0x50303060, 0x03010102, 0xA96767CE, 0x7D2B2B56, 0x19FEFEE7, 0x62D7D7B5, 0xE6ABAB4D, 0x9A7676EC,
0x45CACA8F, 0x9D82821F, 0x40C9C989, 0x877D7DFA, 0x15FAFAEF, 0xEB5959B2, 0xC947478E, 0x0BF0F0FB,
0xECADAD41, 0x67D4D4B3, 0xFDA2A25F, 0xEAAFAF45, 0xBF9C9C23, 0xF7A4A453, 0x967272E4, 0x5BC0C09B,
0xC2B7B775, 0x1CFDFDE1, 0xAE93933D, 0x6A26264C, 0x5A36366C, 0x413F3F7E, 0x02F7F7F5, 0x4FCCCC83,
0x5C343468, 0xF4A5A551, 0x34E5E5D1, 0x08F1F1F9, 0x937171E2, 0x73D8D8AB, 0x53313162, 0x3F15152A,
0x0C040408, 0x52C7C795, 0x65232346, 0x5EC3C39D, 0x28181830, 0xA1969637, 0x0F05050A, 0xB59A9A2F,
0x0907070E, 0x36121224, 0x9B80801B, 0x3DE2E2DF, 0x26EBEBCD, 0x6927274E, 0xCDB2B27F, 0x9F7575EA,
0x1B090912, 0x9E83831D, 0x742C2C58, 0x2E1A1A34, 0x2D1B1B36, 0xB26E6EDC, 0xEE5A5AB4, 0xFBA0A05B,
0xF65252A4, 0x4D3B3B76, 0x61D6D6B7, 0xCEB3B37D, 0x7B292952, 0x3EE3E3DD, 0x712F2F5E, 0x97848413,
0xF55353A6, 0x68D1D1B9, 0x00000000, 0x2CEDEDC1, 0x60202040, 0x1FFCFCE3, 0xC8B1B179, 0xED5B5BB6,
0xBE6A6AD4, 0x46CBCB8D, 0xD9BEBE67, 0x4B393972, 0xDE4A4A94, 0xD44C4C98, 0xE85858B0, 0x4ACFCF85,
0x6BD0D0BB, 0x2AEFEFC5, 0xE5AAAA4F, 0x16FBFBED, 0xC5434386, 0xD74D4D9A, 0x55333366, 0x94858511,
0xCF45458A, 0x10F9F9E9, 0x06020204, 0x817F7FFE, 0xF05050A0, 0x443C3C78, 0xBA9F9F25, 0xE3A8A84B,
0xF35151A2, 0xFEA3A35D, 0xC0404080, 0x8A8F8F05, 0xAD92923F, 0xBC9D9D21, 0x48383870, 0x04F5F5F1,
0xDFBCBC63, 0xC1B6B677, 0x75DADAAF, 0x63212142, 0x30101020, 0x1AFFFFE5, 0x0EF3F3FD, 0x6DD2D2BF,
0x4CCDCD81, 0x140C0C18, 0x35131326, 0x2FECECC3, 0xE15F5FBE, 0xA2979735, 0xCC444488, 0x3917172E,
0x57C4C493, 0xF2A7A755, 0x827E7EFC, 0x473D3D7A, 0xAC6464C8, 0xE75D5DBA, 0x2B191932, 0x957373E6,
0xA06060C0, 0x98818119, 0xD14F4F9E, 0x7FDCDCA3, 0x66222244, 0x7E2A2A54, 0xAB90903B, 0x8388880B,
0xCA46468C, 0x29EEEEC7, 0xD3B8B86B, 0x3C141428, 0x79DEDEA7, 0xE25E5EBC, 0x1D0B0B16, 0x76DBDBAD,
0x3BE0E0DB, 0x56323264, 0x4E3A3A74, 0x1E0A0A14, 0xDB494992, 0x0A06060C, 0x6C242448, 0xE45C5CB8,
0x5DC2C29F, 0x6ED3D3BD, 0xEFACAC43, 0xA66262C4, 0xA8919139, 0xA4959531, 0x37E4E4D3, 0x8B7979F2,
0x32E7E7D5, 0x43C8C88B, 0x5937376E, 0xB76D6DDA, 0x8C8D8D01, 0x64D5D5B1, 0xD24E4E9C, 0xE0A9A949,
0xB46C6CD8, 0xFA5656AC, 0x07F4F4F3, 0x25EAEACF, 0xAF6565CA, 0x8E7A7AF4, 0xE9AEAE47, 0x18080810,
0xD5BABA6F, 0x887878F0, 0x6F25254A, 0x722E2E5C, 0x241C1C38, 0xF1A6A657, 0xC7B4B473, 0x51C6C697,
0x23E8E8CB, 0x7CDDDDA1, 0x9C7474E8, 0x211F1F3E, 0xDD4B4B96, 0xDCBDBD61, 0x868B8B0D, 0x858A8A0F,
0x907070E0, 0x423E3E7C, 0xC4B5B571, 0xAA6666CC, 0xD8484890, 0x05030306, 0x01F6F6F7, 0x120E0E1C,
0xA36161C2, 0x5F35356A, 0xF95757AE, 0xD0B9B969, 0x91868617, 0x58C1C199, 0x271D1D3A, 0xB99E9E27,
0x38E1E1D9, 0x13F8F8EB, 0xB398982B, 0x33111122, 0xBB6969D2, 0x70D9D9A9, 0x898E8E07, 0xA7949433,
0xB69B9B2D, 0x221E1E3C, 0x92878715, 0x20E9E9C9, 0x49CECE87, 0xFF5555AA, 0x78282850, 0x7ADFDFA5,
0x8F8C8C03, 0xF8A1A159, 0x80898909, 0x170D0D1A, 0xDABFBF65, 0x31E6E6D7, 0xC6424284, 0xB86868D0,
0xC3414182, 0xB0999929, 0x772D2D5A, 0x110F0F1E, 0xCBB0B07B, 0xFC5454A8, 0xD6BBBB6D, 0x3A16162C,
0x8D48004E
};

DWORD qtable_shift8[] =
{
0x6363C6A5, 0x7C7CF884, 0x7777EE99, 0x7B7BF68D, 0xF2F2FF0D, 0x6B6BD6BD, 0x6F6FDEB1, 0xC5C59154,
0x30306050, 0x01010203, 0x6767CEA9, 0x2B2B567D, 0xFEFEE719, 0xD7D7B562, 0xABAB4DE6, 0x7676EC9A,
0xCACA8F45, 0x82821F9D, 0xC9C98940, 0x7D7DFA87, 0xFAFAEF15, 0x5959B2EB, 0x47478EC9, 0xF0F0FB0B,
0xADAD41EC, 0xD4D4B367, 0xA2A25FFD, 0xAFAF45EA, 0x9C9C23BF, 0xA4A453F7, 0x7272E496, 0xC0C09B5B,
0xB7B775C2, 0xFDFDE11C, 0x93933DAE, 0x26264C6A, 0x36366C5A, 0x3F3F7E41, 0xF7F7F502, 0xCCCC834F,
0x3434685C, 0xA5A551F4, 0xE5E5D134, 0xF1F1F908, 0x7171E293, 0xD8D8AB73, 0x31316253, 0x15152A3F,
0x0404080C, 0xC7C79552, 0x23234665, 0xC3C39D5E, 0x18183028, 0x969637A1, 0x05050A0F, 0x9A9A2FB5,
0x07070E09, 0x12122436, 0x80801B9B, 0xE2E2DF3D, 0xEBEBCD26, 0x27274E69, 0xB2B27FCD, 0x7575EA9F,
0x0909121B, 0x83831D9E, 0x2C2C5874, 0x1A1A342E, 0x1B1B362D, 0x6E6EDCB2, 0x5A5AB4EE, 0xA0A05BFB,
0x5252A4F6, 0x3B3B764D, 0xD6D6B761, 0xB3B37DCE, 0x2929527B, 0xE3E3DD3E, 0x2F2F5E71, 0x84841397,
0x5353A6F5, 0xD1D1B968, 0x00000000, 0xEDEDC12C, 0x20204060, 0xFCFCE31F, 0xB1B179C8, 0x5B5BB6ED,
0x6A6AD4BE, 0xCBCB8D46, 0xBEBE67D9, 0x3939724B, 0x4A4A94DE, 0x4C4C98D4, 0x5858B0E8, 0xCFCF854A,
0xD0D0BB6B, 0xEFEFC52A, 0xAAAA4FE5, 0xFBFBED16, 0x434386C5, 0x4D4D9AD7, 0x33336655, 0x85851194,
0x45458ACF, 0xF9F9E910, 0x02020406, 0x7F7FFE81, 0x5050A0F0, 0x3C3C7844, 0x9F9F25BA, 0xA8A84BE3,
0x5151A2F3, 0xA3A35DFE, 0x404080C0, 0x8F8F058A, 0x92923FAD, 0x9D9D21BC, 0x38387048, 0xF5F5F104,
0xBCBC63DF, 0xB6B677C1, 0xDADAAF75, 0x21214263, 0x10102030, 0xFFFFE51A, 0xF3F3FD0E, 0xD2D2BF6D,
0xCDCD814C, 0x0C0C1814, 0x13132635, 0xECECC32F, 0x5F5FBEE1, 0x979735A2, 0x444488CC, 0x17172E39,
0xC4C49357, 0xA7A755F2, 0x7E7EFC82, 0x3D3D7A47, 0x6464C8AC, 0x5D5DBAE7, 0x1919322B, 0x7373E695,
0x6060C0A0, 0x81811998, 0x4F4F9ED1, 0xDCDCA37F, 0x22224466, 0x2A2A547E, 0x90903BAB, 0x88880B83,
0x46468CCA, 0xEEEEC729, 0xB8B86BD3, 0x1414283C, 0xDEDEA779, 0x5E5EBCE2, 0x0B0B161D, 0xDBDBAD76,
0xE0E0DB3B, 0x32326456, 0x3A3A744E, 0x0A0A141E, 0x494992DB, 0x06060C0A, 0x2424486C, 0x5C5CB8E4,
0xC2C29F5D, 0xD3D3BD6E, 0xACAC43EF, 0x6262C4A6, 0x919139A8, 0x959531A4, 0xE4E4D337, 0x7979F28B,
0xE7E7D532, 0xC8C88B43, 0x37376E59, 0x6D6DDAB7, 0x8D8D018C, 0xD5D5B164, 0x4E4E9CD2, 0xA9A949E0,
0x6C6CD8B4, 0x5656ACFA, 0xF4F4F307, 0xEAEACF25, 0x6565CAAF, 0x7A7AF48E, 0xAEAE47E9, 0x08081018,
0xBABA6FD5, 0x7878F088, 0x25254A6F, 0x2E2E5C72, 0x1C1C3824, 0xA6A657F1, 0xB4B473C7, 0xC6C69751,
0xE8E8CB23, 0xDDDDA17C, 0x7474E89C, 0x1F1F3E21, 0x4B4B96DD, 0xBDBD61DC, 0x8B8B0D86, 0x8A8A0F85,
0x7070E090, 0x3E3E7C42, 0xB5B571C4, 0x6666CCAA, 0x484890D8, 0x03030605, 0xF6F6F701, 0x0E0E1C12,
0x6161C2A3, 0x35356A5F, 0x5757AEF9, 0xB9B969D0, 0x86861791, 0xC1C19958, 0x1D1D3A27, 0x9E9E27B9,
0xE1E1D938, 0xF8F8EB13, 0x98982BB3, 0x11112233, 0x6969D2BB, 0xD9D9A970, 0x8E8E0789, 0x949433A7,
0x9B9B2DB6, 0x1E1E3C22, 0x87871592, 0xE9E9C920, 0xCECE8749, 0x5555AAFF, 0x28285078, 0xDFDFA57A,
0x8C8C038F, 0xA1A159F8, 0x89890980, 0x0D0D1A17, 0xBFBF65DA, 0xE6E6D731, 0x424284C6, 0x6868D0B8,
0x414182C3, 0x999929B0, 0x2D2D5A77, 0x0F0F1E11, 0xB0B07BCB, 0x5454A8FC, 0xBBBB6DD6, 0x16162C3A,
0x66CCCC24
};

DWORD qtable_shift16[] =
{
0x63C6A563, 0x7CF8847C, 0x77EE9977, 0x7BF68D7B, 0xF2FF0DF2, 0x6BD6BD6B, 0x6FDEB16F, 0xC59154C5,
0x30605030, 0x01020301, 0x67CEA967, 0x2B567D2B, 0xFEE719FE, 0xD7B562D7, 0xAB4DE6AB, 0x76EC9A76,
0xCA8F45CA, 0x821F9D82, 0xC98940C9, 0x7DFA877D, 0xFAEF15FA, 0x59B2EB59, 0x478EC947, 0xF0FB0BF0,
0xAD41ECAD, 0xD4B367D4, 0xA25FFDA2, 0xAF45EAAF, 0x9C23BF9C, 0xA453F7A4, 0x72E49672, 0xC09B5BC0,
0xB775C2B7, 0xFDE11CFD, 0x933DAE93, 0x264C6A26, 0x366C5A36, 0x3F7E413F, 0xF7F502F7, 0xCC834FCC,
0x34685C34, 0xA551F4A5, 0xE5D134E5, 0xF1F908F1, 0x71E29371, 0xD8AB73D8, 0x31625331, 0x152A3F15,
0x04080C04, 0xC79552C7, 0x23466523, 0xC39D5EC3, 0x18302818, 0x9637A196, 0x050A0F05, 0x9A2FB59A,
0x070E0907, 0x12243612, 0x801B9B80, 0xE2DF3DE2, 0xEBCD26EB, 0x274E6927, 0xB27FCDB2, 0x75EA9F75,
0x09121B09, 0x831D9E83, 0x2C58742C, 0x1A342E1A, 0x1B362D1B, 0x6EDCB26E, 0x5AB4EE5A, 0xA05BFBA0,
0x52A4F652, 0x3B764D3B, 0xD6B761D6, 0xB37DCEB3, 0x29527B29, 0xE3DD3EE3, 0x2F5E712F, 0x84139784,
0x53A6F553, 0xD1B968D1, 0x00000000, 0xEDC12CED, 0x20406020, 0xFCE31FFC, 0xB179C8B1, 0x5BB6ED5B,
0x6AD4BE6A, 0xCB8D46CB, 0xBE67D9BE, 0x39724B39, 0x4A94DE4A, 0x4C98D44C, 0x58B0E858, 0xCF854ACF,
0xD0BB6BD0, 0xEFC52AEF, 0xAA4FE5AA, 0xFBED16FB, 0x4386C543, 0x4D9AD74D, 0x33665533, 0x85119485,
0x458ACF45, 0xF9E910F9, 0x02040602, 0x7FFE817F, 0x50A0F050, 0x3C78443C, 0x9F25BA9F, 0xA84BE3A8,
0x51A2F351, 0xA35DFEA3, 0x4080C040, 0x8F058A8F, 0x923FAD92, 0x9D21BC9D, 0x38704838, 0xF5F104F5,
0xBC63DFBC, 0xB677C1B6, 0xDAAF75DA, 0x21426321, 0x10203010, 0xFFE51AFF, 0xF3FD0EF3, 0xD2BF6DD2,
0xCD814CCD, 0x0C18140C, 0x13263513, 0xECC32FEC, 0x5FBEE15F, 0x9735A297, 0x4488CC44, 0x172E3917,
0xC49357C4, 0xA755F2A7, 0x7EFC827E, 0x3D7A473D, 0x64C8AC64, 0x5DBAE75D, 0x19322B19, 0x73E69573,
0x60C0A060, 0x81199881, 0x4F9ED14F, 0xDCA37FDC, 0x22446622, 0x2A547E2A, 0x903BAB90, 0x880B8388,
0x468CCA46, 0xEEC729EE, 0xB86BD3B8, 0x14283C14, 0xDEA779DE, 0x5EBCE25E, 0x0B161D0B, 0xDBAD76DB,
0xE0DB3BE0, 0x32645632, 0x3A744E3A, 0x0A141E0A, 0x4992DB49, 0x060C0A06, 0x24486C24, 0x5CB8E45C,
0xC29F5DC2, 0xD3BD6ED3, 0xAC43EFAC, 0x62C4A662, 0x9139A891, 0x9531A495, 0xE4D337E4, 0x79F28B79,
0xE7D532E7, 0xC88B43C8, 0x376E5937, 0x6DDAB76D, 0x8D018C8D, 0xD5B164D5, 0x4E9CD24E, 0xA949E0A9,
0x6CD8B46C, 0x56ACFA56, 0xF4F307F4, 0xEACF25EA, 0x65CAAF65, 0x7AF48E7A, 0xAE47E9AE, 0x08101808,
0xBA6FD5BA, 0x78F08878, 0x254A6F25, 0x2E5C722E, 0x1C38241C, 0xA657F1A6, 0xB473C7B4, 0xC69751C6,
0xE8CB23E8, 0xDDA17CDD, 0x74E89C74, 0x1F3E211F, 0x4B96DD4B, 0xBD61DCBD, 0x8B0D868B, 0x8A0F858A,
0x70E09070, 0x3E7C423E, 0xB571C4B5, 0x66CCAA66, 0x4890D848, 0x03060503, 0xF6F701F6, 0x0E1C120E,
0x61C2A361, 0x356A5F35, 0x57AEF957, 0xB969D0B9, 0x86179186, 0xC19958C1, 0x1D3A271D, 0x9E27B99E,
0xE1D938E1, 0xF8EB13F8, 0x982BB398, 0x11223311, 0x69D2BB69, 0xD9A970D9, 0x8E07898E, 0x9433A794,
0x9B2DB69B, 0x1E3C221E, 0x87159287, 0xE9C920E9, 0xCE8749CE, 0x55AAFF55, 0x28507828, 0xDFA57ADF,
0x8C038F8C, 0xA159F8A1, 0x89098089, 0x0D1A170D, 0xBF65DABF, 0xE6D731E6, 0x4284C642, 0x68D0B868,
0x4182C341, 0x9929B099, 0x2D5A772D, 0x0F1E110F, 0xB07BCBB0, 0x54A8FC54, 0xBB6DD6BB, 0x162C3A16,
0x158D4812
};

DWORD qtable_shift24[] =
{
0xC6A56363, 0xF8847C7C, 0xEE997777, 0xF68D7B7B, 0xFF0DF2F2, 0xD6BD6B6B, 0xDEB16F6F, 0x9154C5C5,
0x60503030, 0x02030101, 0xCEA96767, 0x567D2B2B, 0xE719FEFE, 0xB562D7D7, 0x4DE6ABAB, 0xEC9A7676,
0x8F45CACA, 0x1F9D8282, 0x8940C9C9, 0xFA877D7D, 0xEF15FAFA, 0xB2EB5959, 0x8EC94747, 0xFB0BF0F0,
0x41ECADAD, 0xB367D4D4, 0x5FFDA2A2, 0x45EAAFAF, 0x23BF9C9C, 0x53F7A4A4, 0xE4967272, 0x9B5BC0C0,
0x75C2B7B7, 0xE11CFDFD, 0x3DAE9393, 0x4C6A2626, 0x6C5A3636, 0x7E413F3F, 0xF502F7F7, 0x834FCCCC,
0x685C3434, 0x51F4A5A5, 0xD134E5E5, 0xF908F1F1, 0xE2937171, 0xAB73D8D8, 0x62533131, 0x2A3F1515,
0x080C0404, 0x9552C7C7, 0x46652323, 0x9D5EC3C3, 0x30281818, 0x37A19696, 0x0A0F0505, 0x2FB59A9A,
0x0E090707, 0x24361212, 0x1B9B8080, 0xDF3DE2E2, 0xCD26EBEB, 0x4E692727, 0x7FCDB2B2, 0xEA9F7575,
0x121B0909, 0x1D9E8383, 0x58742C2C, 0x342E1A1A, 0x362D1B1B, 0xDCB26E6E, 0xB4EE5A5A, 0x5BFBA0A0,
0xA4F65252, 0x764D3B3B, 0xB761D6D6, 0x7DCEB3B3, 0x527B2929, 0xDD3EE3E3, 0x5E712F2F, 0x13978484,
0xA6F55353, 0xB968D1D1, 0x00000000, 0xC12CEDED, 0x40602020, 0xE31FFCFC, 0x79C8B1B1, 0xB6ED5B5B,
0xD4BE6A6A, 0x8D46CBCB, 0x67D9BEBE, 0x724B3939, 0x94DE4A4A, 0x98D44C4C, 0xB0E85858, 0x854ACFCF,
0xBB6BD0D0, 0xC52AEFEF, 0x4FE5AAAA, 0xED16FBFB, 0x86C54343, 0x9AD74D4D, 0x66553333, 0x11948585,
0x8ACF4545, 0xE910F9F9, 0x04060202, 0xFE817F7F, 0xA0F05050, 0x78443C3C, 0x25BA9F9F, 0x4BE3A8A8,
0xA2F35151, 0x5DFEA3A3, 0x80C04040, 0x058A8F8F, 0x3FAD9292, 0x21BC9D9D, 0x70483838, 0xF104F5F5,
0x63DFBCBC, 0x77C1B6B6, 0xAF75DADA, 0x42632121, 0x20301010, 0xE51AFFFF, 0xFD0EF3F3, 0xBF6DD2D2,
0x814CCDCD, 0x18140C0C, 0x26351313, 0xC32FECEC, 0xBEE15F5F, 0x35A29797, 0x88CC4444, 0x2E391717,
0x9357C4C4, 0x55F2A7A7, 0xFC827E7E, 0x7A473D3D, 0xC8AC6464, 0xBAE75D5D, 0x322B1919, 0xE6957373,
0xC0A06060, 0x19988181, 0x9ED14F4F, 0xA37FDCDC, 0x44662222, 0x547E2A2A, 0x3BAB9090, 0x0B838888,
0x8CCA4646, 0xC729EEEE, 0x6BD3B8B8, 0x283C1414, 0xA779DEDE, 0xBCE25E5E, 0x161D0B0B, 0xAD76DBDB,
0xDB3BE0E0, 0x64563232, 0x744E3A3A, 0x141E0A0A, 0x92DB4949, 0x0C0A0606, 0x486C2424, 0xB8E45C5C,
0x9F5DC2C2, 0xBD6ED3D3, 0x43EFACAC, 0xC4A66262, 0x39A89191, 0x31A49595, 0xD337E4E4, 0xF28B7979,
0xD532E7E7, 0x8B43C8C8, 0x6E593737, 0xDAB76D6D, 0x018C8D8D, 0xB164D5D5, 0x9CD24E4E, 0x49E0A9A9,
0xD8B46C6C, 0xACFA5656, 0xF307F4F4, 0xCF25EAEA, 0xCAAF6565, 0xF48E7A7A, 0x47E9AEAE, 0x10180808,
0x6FD5BABA, 0xF0887878, 0x4A6F2525, 0x5C722E2E, 0x38241C1C, 0x57F1A6A6, 0x73C7B4B4, 0x9751C6C6,
0xCB23E8E8, 0xA17CDDDD, 0xE89C7474, 0x3E211F1F, 0x96DD4B4B, 0x61DCBDBD, 0x0D868B8B, 0x0F858A8A,
0xE0907070, 0x7C423E3E, 0x71C4B5B5, 0xCCAA6666, 0x90D84848, 0x06050303, 0xF701F6F6, 0x1C120E0E,
0xC2A36161, 0x6A5F3535, 0xAEF95757, 0x69D0B9B9, 0x17918686, 0x9958C1C1, 0x3A271D1D, 0x27B99E9E,
0xD938E1E1, 0xEB13F8F8, 0x2BB39898, 0x22331111, 0xD2BB6969, 0xA970D9D9, 0x07898E8E, 0x33A79494,
0x2DB69B9B, 0x3C221E1E, 0x15928787, 0xC920E9E9, 0x8749CECE, 0xAAFF5555, 0x50782828, 0xA57ADFDF,
0x038F8C8C, 0x59F8A1A1, 0x09808989, 0x1A170D0D, 0x65DABFBF, 0xD731E6E6, 0x84C64242, 0xD0B86868,
0x82C34141, 0x29B09999, 0x5A772D2D, 0x1E110F0F, 0x7BCBB0B0, 0xA8FC5454, 0x6DD6BBBB, 0x2C3A1616,
0x16B8D95E
};

extern DWORD qtable_def[] =
{
0x7B777C63, 0xC56F6BF2, 0x2B670130, 0x76ABD7FE, 0x7DC982CA, 0xF04759FA, 0xAFA2D4AD, 0xC072A49C,
0x2693FDB7, 0xCCF73F36, 0xF1E5A534, 0x1531D871, 0xC323C704, 0x9A059618, 0xE2801207, 0x75B227EB,
0x1A2C8309, 0xA05A6E1B, 0xB3D63B52, 0x842FE329, 0xED00D153, 0x5BB1FC20, 0x39BECB6A, 0xCF584C4A,
0xFBAAEFD0, 0x85334D43, 0x7F02F945, 0xA89F3C50, 0x8F40A351, 0xF5389D92, 0x21DAB6BC, 0xD2F3FF10,
0xEC130CCD, 0x1744975F, 0x3D7EA7C4, 0x73195D64, 0xDC4F8160, 0x88902A22, 0x14B8EE46, 0xDB0B5EDE,
0x0A3A32E0, 0x5C240649, 0x62ACD3C2, 0x79E49591, 0x6D37C8E7, 0xA94ED58D, 0xEAF4566C, 0x08AE7A65,
0x2E2578BA, 0xC6B4A61C, 0x1F74DDE8, 0x8A8BBD4B, 0x66B53E70, 0x0EF60348, 0xB9573561, 0x9E1DC186,
0x1198F8E1, 0x948ED969, 0xE9871E9B, 0xDF2855CE, 0x0D89A18C, 0x6842E6BF, 0x0F2D9941, 0x16BB54B0,
0x1382B005, 0x8D8D48C2, 0x00000618, 0xCD633FE8, 0x894990FF, 0x158D48C0, 0xFEE5D0AC, 0x988D8D48,
0xE8000004, 0xFFC295D8, 0xC9834990, 0xC03145FF, 0x48C28948, 0xE8584D8D, 0xFFC3F304, 0xBD834890,
0x000004B0, 0x480C7210, 0x04988D8B, 0xBFE80000, 0x48001817, 0x04B085C7, 0x000F0000, 0xC7480000,
0x0004A885, 0x00000000, 0x9885C600, 0x00000004, 0x30BD8348, 0x10000006, 0x8B480C72, 0x0006188D,
0x178CE800, 0xC7480018, 0x00063085, 0x00000F00, 0x85C74800, 0x00000628, 0x00000000, 0x061885C6,
0x48000000, 0x4820478B, 0x4108538D, 0x000003B8, 0x067C8300, 0x850F0234, 0x000000EE, 0x188D8D48,
0xE8000005, 0xFFCD6288, 0xC0894990, 0xC1158D48, 0x48FEF26E, 0x06588D8D, 0x21E80000, 0x90FFC295,
0x51058D4C, 0x48FEF26B, 0x8D48C289, 0x0004D88D, 0xCD2AE800, 0x4990FFC3, 0x45FFC983, 0x8948C031,
0x4D8D48C2, 0xF236E858, 0x4890FFC3, 0x04F0BD83, 0x72100000, 0x8D8B480C, 0x000004D8, 0x1816F1E8,
0x85C74800, 0x000004F0, 0x0000000F, 0xE885C748, 0x00000004, 0xC6000000, 0x0004D885, 0x83480000,
0x000670BD, 0x0C721000, 0x588D8B48, 0xE8000006, 0x001816BE, 0x7085C748, 0x0F000006, 0x48000000,
0x066885C7, 0x00000000, 0x85C60000, 0x00000658, 0xBD834800, 0x00000530, 0x480C7210, 0x05188D8B,
0x8BE80000, 0x48001816, 0x053085C7, 0x000F0000, 0xC7480000, 0x00052885, 0x00000000, 0x1885C600,
0x00000005, 0x00009FE9, 0x8D481F00, 0x0001B88D, 0x619AE800, 0x4990FFCD, 0x8D48C089, 0xE5CF0715,
0x8D8D48FE, 0x00000178, 0xC29433E8, 0x834990FF, 0x3145FFC9, 0xC28948C0, 0x584D8D48, 0xC3F15FE8,
0x834890FF, 0x000190BD, 0x0C721000, 0x788D8B48, 0xE8000001, 0x0018161A, 0x9085C748, 0x0F000001,
0x48000000, 0x018885C7, 0x00000000, 0x85C60000, 0x00000178, 0xBD834800, 0x000001D0, 0x480C7210,
0x01B88D8B, 0xE7E80000, 0x48001815, 0x01D085C7, 0x000F0000, 0xC7480000, 0x0001C885, 0x00000000,
0xB885C600, 0x00000001, 0x20478B48, 0x0C538D48, 0x0003B841, 0x39440000, 0x0F340644, 0x0000D085,
0x8D8D4800, 0x00000778, 0xCD60E3E8, 0x894990FF, 0x158D48C0, 0xFEF26D1C, 0x388D8D48, 0xE8000002,
0xFFC2937C, 0x058D4C90, 0xFEF269AC, 0x48C28948, 0x01F88D8D, 0x85E80000, 0x90FFC3CB, 0xFFC98349,
0x48C03145, 0x8D48C289, 0x91E8584D, 0x90FFC3F0, 0x10BD8348, 0x10000002, 0x8B480C72, 0x0001F88D,
0x154CE800, 0xC7480018, 0x00021085, 0x00000F00, 0x85C74800, 0x00000208, 0x00000000, 0x01F885C6,
0x48000000, 0x0250BD83, 0x72100000, 0x8D8B480C, 0x00000238, 0x181519E8, 0x85C74800, 0x00000250,
0x0000000F
};


QWORD shift_string[] =
{
0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x3736353433323130,
0x6665646362613938, 0x0000000000000000, 0x3736353433323130, 0x6665646362613938,
0x0000000000000000, 0x3736353433323130, 0x6665646362613938, 0x0000000000000000,
0x3736353433323130, 0x6665646362613938, 0x0000000000000000, 0x3736353433323130,
0x6665646362613938, 0x0000000000000000, 0x3736353433323130, 0x6665646362613938,
0x0000000000000000, 0x3736353433323130, 0x6665646362613938, 0x0000000000000000,
0x3736353433323130, 0x6665646362613938, 0x0000000000000000, 0x3736353433323130,
0x6665646362613938, 0x0000000000000000, 0x3736353433323130, 0x6665646362613938,
0x0000000000000000, 0x3736353433323130, 0x6665646362613938, 0x0000000000000000,
0x3736353433323130, 0x6665646362613938
}; //"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00""0123456789abcdef\x00\x00\x00\x00\x00\x00\x00\x00""0123456789abcdef\x00\x00\x00\x00\x00\x00\x00\x00""0123456789abcdef\x00\x00\x00\x00\x00\x00\x00\x00""0123456789abcdef\x00\x00\x00\x00\x00\x00\x00\x00""0123456789abcdef\x00\x00\x00\x00\x00\x00\x00\x00""0123456789abcdef\x00\x00\x00\x00\x00\x00\x00\x00""0123456789abcdef\x00\x00\x00\x00\x00\x00\x00\x00""0123456789abcdef\x00\x00\x00\x00\x00\x00\x00\x00""0123456789abcdef\x00\x00\x00\x00\x00\x00\x00\x00""0123456789abcdef\x00\x00\x00\x00\x00\x00\x00\x00""0123456789abcdef\x00\x00\x00\x00\x00\x00\x00\x00""0123456789abcdef"


QWORD arg1_table_sick[] =
{
0x300E2385DA3805B9, 0x1A70D4D5437E9245, 0xEC11B78C8D40FD02, 0x490B4F8CE44FC21B,
0x61514A8EB5210999, 0xAD448D97085E7597, 0xD470431757DF3017, 0xA51AF800690F3F19,
0x83AF73004128695B, 0xCC15C719BD7F7C0E, 0xC2871A5B59CA5DFF, 0x716ABB173ED00F0E,
0x9B4D47A4A2EF687C, 0x4FBAB419FC571555, 0x39A22FD8EAAB1B86, 0xB3EDA14C671A52F1,
0xD309345E7AABACE5, 0xD4F7F3BD5EB87D29, 0xA9A298BB746A6D56, 0x8A4F8E948DB14977,
0xB0EF82D02D723241, 0x09CA6876C55764DC, 0, 0, 0, 0, 0, 0, 0, 0 
};

BYTE SecretTableMagic_shift[] = 
{
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E,
0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x00, 0x00, 0x00, 0x00, 0x3F,
0x00, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28,
0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

char end_tag[] = {'<','/'};

bool __fastcall EA_Origin__Full_DECODE_stage(__in LPBYTE pSourceReadData, __in size_t SourceSize, __out char* pXML_Container,  __out char* pXML_Tag_value, __out LPDWORD pX_TABLE)
{
	pDLF_head pHead = (pDLF_head)pSourceReadData;
	if(pHead->b1 != 0x30)
		return false;

	byte KEY_wick[KEY_LEN];
	DWORD key_sick[KEY_sick];
	BYTE key_HOSE[KEY_sick];
	memset(&KEY_wick, 0, sizeof(KEY_wick));
	LPBYTE pCryptData = pSourceReadData + sizeof(DLF_head);
	size_t pCryptDataSize = SourceSize - sizeof(DLF_head);

	//EA_Origin__DLF_key_wick_decrypt(&KEY_wick[0], pCryptData, SourceSize - sizeof(DLF_head), &key_sick[0], &key_HOSE[0]);
	Arg1_crypto_info key_block_sick;
	key_block_sick.block_size = DEF_CRYPTO_BLOCK_sick;
	key_block_sick.pCryptoBlock = &key_block_sick.BuilCrTable[0];
	memcpy(key_block_sick.pCryptoBlock, arg1_table_sick, sizeof(arg1_table_sick));

	QWORD localcopy_shift_string[42];
	memcpy(&localcopy_shift_string[0], &shift_string[0], sizeof(localcopy_shift_string));

	size_t f = decrypt_XML((LPDWORD)&key_block_sick, 0, pCryptDataSize, (LPBYTE)&localcopy_shift_string[0] , (LPDWORD)pCryptData , (LPBYTE)pXML_Container);
	//memset(pXML_Container + pCryptDataSize, 0, sizeof(QWORD));
	*pX_TABLE = 0;
	if(f == NULL)
		return false;

	
	size_t value_size = FoundXMLTag(pXML_Container, f, "GameToken",  pXML_Tag_value);

	if(!value_size)
		return false;
	
	DWORD lick;
	Decrypt_SecretTable(pXML_Tag_value, value_size, &lick, (LPBYTE)pX_TABLE);

return true;
}

size_t __fastcall EA_Origin__dbeadata_seek_signature1(__in LPBYTE pSource, __in size_t SourceSize)
{
	
	/* Œ–»√»Õ¿À
	 unsigned int i; // [rsp+0h] [rbp-18h]

  for ( i = 0; i < a2 && (*(_DWORD *)(a1 + i) != 0x1825364E || *(_DWORD *)(a1 + i + 4) != 0xAD31EDD9); ++i );
  return i;
  */
	register size_t Signature1 = dbea1__SIG_1;
	register size_t Signature2 = dbea1__SIG_2;
	register size_t i = NULL;
	pSource--;
	do
	{
		pSource++;
		i++;
		if(*pSource != Signature1 || *(pSource+sizeof(DWORD)) != Signature2)
			continue;
		return i;
	}while(--SourceSize);

return NULL;
}

size_t __fastcall decrypt_XML(LPDWORD a1_pSick, size_t a2_unk, size_t a3_SourceSize, LPBYTE a4_pDecryptTable, LPDWORD pSource, LPBYTE pOut)
{
  signed __int64 v6; // rcx
  size_t v7; // rdx
  register size_t j; // [rsp+20h] [rbp-28h]
 // register size_t i; // [rsp+20h] [rbp-28h]
  DWORD TMP_STR[6]; // [rsp+28h] [rbp-20h]
  DWORD *a1; // [rsp+50h] [rbp+8h]
  unsigned int a2; // [rsp+58h] [rbp+10h]
  size_t v14; // [rsp+60h] [rbp+18h]
  register LPBYTE v15; // [rsp+68h] [rbp+20h]

  LPBYTE pOutStartSave = pOut;

  v15 = a4_pDecryptTable;
  v14 = a3_SourceSize;
  a2 = a2_unk;
  a1 = a1_pSick;
  v6 = 16i64;
  v7 = a3_SourceSize % 0x10;
  if ( !(a3_SourceSize % 0x10) )
  {
    if ( a2 )
    {
      while ( v14 )
      {
        for ( j = 0; j < 16; ++j )
          *(pOut + j) = v15[j] ^ *(pSource + j);
        qwtable(a1, a2, (LPDWORD)pOut, pOut);
        memcpy(v15, pOut, 0x10ui64);
        pSource += 4;
        pOut += 16i64;
        v14 -= 16i64;
      }
    }
    else
    {
      while ( v14 )
      {
        memcpy(&TMP_STR[0], pSource, 0x10ui64);
        qwtable(a1, a2, pSource, pOut);
		LPBYTE pOutXOR = pOut;
		LPBYTE v15XOR = v15;
		j = 16;
		do
		{
			*pOutXOR++ ^= *v15XOR++;
		}while(--j);
			//for ( j = 0; j < 16; ++j )
			 // *(pOut + j) ^= v15[j];
			memcpy(v15, TMP_STR, 0x10ui64);
			pSource += 4;
			pOut += 16i64;
			v14 -= 16i64;
		  }
    }
	*pOut = '\0'; //zero
  }
  return pOut-pOutStartSave;
}

size_t __fastcall FoundXMLTag(char* pSource, size_t SourceSize, const char* pTagName, char* pExtractedTagValue)
{
	register char* InstantPos;
	register size_t ResultSize = 0;
	register size_t sizeTagName = strlen(pTagName);
	do
	{
		if(*pSource++ != '<')
			continue;
		
			if (memcmp(pSource, pTagName, sizeTagName))
				continue;

			//strlen(pTagName);
			pSource+=sizeTagName;
			SourceSize-=sizeTagName;
			pSource+=sizeof('>');
			SourceSize-=sizeof('>');
			do
			{
				
				memcpy(pExtractedTagValue++, pSource++, sizeof(char));
				ResultSize++;
				if(memcmp(pSource, (const void*)&end_tag[0], sizeof(end_tag)))
					continue;

					if (memcmp(++pSource, pTagName, sizeTagName))
						break;
			}while(--SourceSize);

				if(SourceSize == NULL)
					ResultSize= 0;
			break;
	}while(--SourceSize);

return ResultSize;
}

LPBYTE __fastcall Decrypt_SecretTable(char* pSource, size_t SourceSize, LPDWORD pLick, LPBYTE pResult)
{
 // register size_t v4; // [rsp+20h] [rbp-48h]
 // int v5; // [rsp+20h] [rbp-48h]
 // int v6; // [rsp+20h] [rbp-48h]
 // int v7; // [rsp+20h] [rbp-48h]
  unsigned long v8; // [rsp+24h] [rbp-44h]
  DWORD v9; // [rsp+28h] [rbp-40h]
  unsigned long v10; // [rsp+2Ch] [rbp-3Ch]
  unsigned long v11; // [rsp+30h] [rbp-38h]
  unsigned long v12; // [rsp+34h] [rbp-34h]
  BYTE *v13; // [rsp+38h] [rbp-30h]
  unsigned long v14; // [rsp+40h] [rbp-28h]
  LPBYTE fpSource; // [rsp+70h] [rbp+8h]
  unsigned long v16; // [rsp+78h] [rbp+10h]
  size_t calc_size; // [rsp+80h] [rbp+18h]

  v16 = SourceSize;
  fpSource = (LPBYTE)pSource;
  if ( SourceSize % 4 )
    return 0i64;
  calc_size = 3 * (SourceSize / 4);
  if ( pSource[(SourceSize - 1)] == end_base )
    --calc_size;
  if ( pSource[(SourceSize - 2)] == end_base )
    --calc_size;
  v13 = pResult;
  if ( !v13 )
    return 0i64;
  //v4 = 0;
  v8 = 0;
 // while ( v4 < v16 )
  do
  {
  //  if ( fpSource[v4] == end_base )
	if ( *fpSource == end_base )
      v11 = 0;
    else
      v11 = (BYTE)*(&SecretTableMagic_shift[0] + *fpSource);
    fpSource++; //v5 = v4 + 1;
    if ( *fpSource == end_base )
      v14 = 0;
    else
      v14 = (BYTE)*(&SecretTableMagic_shift[0] + *fpSource);
   fpSource++; // v6 = v5 + 1;
    if ( *fpSource == end_base )
      v10 = 0;
    else
      v10 = (BYTE)*(&SecretTableMagic_shift[0] + *fpSource);
   fpSource++; // v7 = v6 + 1;
    if ( *fpSource == end_base )
      v12 = 0;
    else
      v12 = (BYTE)*(&SecretTableMagic_shift[0] + *fpSource);
    fpSource++; //v4 = v7 + 1;
    v9 = (v14 << 12) + (v11 << 18) + v12 + (v10 << 6);
    if ( v8 < calc_size )
      v13[v8++] = (v9 >> 16) & 0x0FF;
    if ( v8 < calc_size )
      v13[v8++] = (v9 >> 8) & 0x0FF;
    if ( v8 < calc_size )
      v13[v8++] = v12 + (v10 << 6);
  }
  while(--v16);

return v13;
}

/*
__int64 __fastcall qwtable(LPDWORD a1, size_t a2, LPDWORD pSource, LPBYTE pOut)
{
  DWORD *pCryptTable; // ST00_8
  DWORD v5; // ST20_4
  DWORD *v6; // ST00_8
  DWORD v7; // ST24_4
  DWORD v8; // ST1C_4
  DWORD v9; // ST18_4
  DWORD v10; // ST20_4
  DWORD *v11; // ST00_8
  DWORD v12; // ST24_4
  DWORD v13; // ST1C_4
  DWORD v14; // ST18_4
  DWORD v15; // ST20_4
  DWORD *v16; // ST00_8
  DWORD v17; // ST24_4
  DWORD v18; // ST1C_4
  DWORD v19; // ST18_4
  DWORD v20; // ST20_4
  DWORD *v21; // ST00_8
  DWORD v22; // ST24_4
  DWORD v23; // ST1C_4
  DWORD v24; // ST18_4
  DWORD *v26; // [rsp+0h] [rbp-38h]
  DWORD v27; // [rsp+8h] [rbp-30h]
  int v28; // [rsp+8h] [rbp-30h]
  DWORD v29; // [rsp+Ch] [rbp-2Ch]
  int v30; // [rsp+Ch] [rbp-2Ch]
  DWORD v31; // [rsp+10h] [rbp-28h]
  int v32; // [rsp+10h] [rbp-28h]
  DWORD v33; // [rsp+14h] [rbp-24h]
  int v34; // [rsp+14h] [rbp-24h]
  int j; // [rsp+28h] [rbp-10h]
  int i; // [rsp+28h] [rbp-10h]
  LPDWORD fpSource = pSource;
  pCryptTable = (LPDWORD)*(a1 + 2);
  /*
  v33 = *pCryptTable ^ ((pSource[3] << 24) | (pSource[2] << 16) | *pSource);
  ++pCryptTable;
  v31 = *pCryptTable ^ ((pSource[7] << 24) | (pSource[6] << 16) | *(pSource + 2));
  ++pCryptTable;
  v27 = *pCryptTable ^ ((pSource[11] << 24) | (pSource[10] << 16) | *(pSource + 4));
  ++pCryptTable;
  v29 = *pCryptTable ^ ((pSource[15] << 24) | (pSource[14] << 16) | *(pSource + 6));
  v26 = pCryptTable + 1;

  v33 = *pCryptTable++ ^ *fpSource++;
  v31 = *pCryptTable++ ^ *fpSource++;
  v27 = *pCryptTable++ ^ *fpSource++;
  v29 = *pCryptTable++ ^ *fpSource++;
  //v26 = pCryptTable + 1;
  if ( a2 )
  {
    for ( i = (*a1 >> 1) - 1; i > 0; --i )
    {
      v15 = *(&qtable_shift24[0] + ((v29 >> 24) & 0xFF)) ^ *(&qtable_shift16[0] + ((v27 >> 16) & 0xFF)) ^ *(&qtable_shift8[0] + (v31 >> 8)) ^ *(&qtable_shift_byte[0] + (v33 & 0xFF)) ^ *v26;
      v16 = v26 + 1;
      v17 = *(&qtable_shift24[0] + ((v33 >> 24) & 0xFF)) ^ *(&qtable_shift16[0] + ((v29 >> 16) & 0xFF)) ^ *(&qtable_shift8[0] + (v27 >> 8)) ^ *(&qtable_shift_byte[0] + (v31 & 0xFF)) ^ *v16;
      ++v16;
      v18 = *(&qtable_shift24[0] + ((v31 >> 24) & 0xFF)) ^ *(&qtable_shift16[0] + ((v33 >> 16) & 0xFF)) ^ *(&qtable_shift8[0] + (v29 >> 8)) ^ *(&qtable_shift_byte[0] + (v27 & 0xFF)) ^ *v16;
      ++v16;
      v19 = *(&qtable_shift24[0] + ((v27 >> 24) & 0xFF)) ^ *(&qtable_shift16[0] + ((v31 >> 16) & 0xFF)) ^ *(&qtable_shift8[0] + (v33 >> 8)) ^ *(&qtable_shift_byte[0] + (v29 & 0xFF)) ^ *v16;
      ++v16;
      v33 = *(&qtable_shift24[0] + ((v19 >> 24) & 0xFF)) ^ *(&qtable_shift16[0] + ((v18 >> 16) & 0xFF)) ^ *(&qtable_shift8[0] + (v17 >> 8)) ^ *(&qtable_shift_byte[0] + (v15 & 0xFF)) ^ *v16;
      ++v16;
      v31 = *(&qtable_shift24[0] + ((v15 >> 24) & 0xFF)) ^ *(&qtable_shift16[0] + ((v19 >> 16) & 0xFF)) ^ *(&qtable_shift8[0] + (v18 >> 8)) ^ *(&qtable_shift_byte[0] + (v17 & 0xFF)) ^ *v16;
      ++v16;
      v27 = *(&qtable_shift24[0] + ((v17 >> 24) & 0xFF)) ^ *(&qtable_shift16[0] + ((v15 >> 16) & 0xFF)) ^ *(&qtable_shift8[0] + (v19 >> 8)) ^ *(&qtable_shift_byte[0] + (v18 & 0xFF)) ^ *v16;
      ++v16;
      v29 = *(&qtable_shift24[0] + ((v18 >> 24) & 0xFF)) ^ *(&qtable_shift16[0] + ((v17 >> 16) & 0xFF)) ^ *(&qtable_shift8[0] + (v15 >> 8)) ^ *(&qtable_shift_byte[0] + (v19 & 0xFF)) ^ *v16;
      v26 = v16 + 1;
    }
    v20 = *(&qtable_shift24[0] + ((v29 >> 24)  & 0xFF)) ^ *(&qtable_shift16[0] + ((v27 >> 16) & 0xFF)) ^ *(&qtable_shift8[0] + ((v31 >> 8)  & 0xFF)) ^ *(&qtable_shift_byte[0] + (v33  & 0xFF)) ^ *v26;
    v21 = v26 + 1;
    v22 = *(&qtable_shift24[0] + ((v33 >> 24) & 0xFF)) ^ *(&qtable_shift16[0] + ((v29 >> 16) & 0xFF)) ^ *(&qtable_shift8[0] + ((v27 >> 8) & 0xFF)) ^ *(&qtable_shift_byte[0] + (v31  & 0xFF)) ^ *v21;
    ++v21;
    v23 = *(&qtable_shift24[0] + ((v31 >> 24) & 0xFF)) ^ *(&qtable_shift16[0] + ((v33 >> 16) & 0xFF)) ^ *(&qtable_shift8[0] + ((v29 >> 8) & 0xFF)) ^ *(&qtable_shift_byte[0] + (v27 & 0xFF)) ^ *v21;
    ++v21;
    v24 = *(&qtable_shift24[0] + ((v27 >> 24)  & 0xFF)) ^ *(&qtable_shift16[0] + ((v31 >> 16) & 0xFF)) ^ *(&qtable_shift8[0] + ((v33 >> 8) & 0xFF)) ^ *(&qtable_shift_byte[0] + (v29 & 0xFF)) ^ *v21;
    ++v21;
    v34 = (*(&qtable_def[0] + (v24 >> 24)) << 24) ^ (*(&qtable_def[0] + ((v23 >> 16) & 0xFF)) << 16) ^ (*(&qtable_def[0] + (v22 >> 8)) << 8) ^ *(&qtable_def[0] + (v20 & 0xFF)) ^ *v21;
    ++v21;
    v32 = (*(&qtable_def[0] + (v20 >> 24)) << 24) ^ (*(&qtable_def[0] + ((v24 >> 16) & 0xFF)) << 16) ^ (*(&qtable_def[0] + (v23 >> 8)) << 8) ^ *(&qtable_def[0] + (v22 & 0xFF)) ^ *v21;
    ++v21;
    v28 = (*(&qtable_def[0] + (v22 >> 24)) << 24) ^ (*(&qtable_def[0] + ((v20 >> 16) & 0xFF)) << 16) ^ (*(&qtable_def[0] + (v24 >> 8)) << 8) ^ *(&qtable_def[0] + (v23 & 0xFF)) ^ *v21;
    v30 = (*(&qtable_def[0] + (v23 >> 24)) << 24) ^ (*(&qtable_def[0] + ((v22 >> 16) & 0xFF)) << 16) ^ (*(&qtable_def[0] + (v20 >> 8)) << 8) ^ *(&qtable_def[0] + (v24 & 0xFF)) ^ v21[1];
  }
  else
  {
    for ( j = (*a1 >> 1) - 1; j > 0; --j )
    {
      v5 = *(&qtable_shift24_2[0] + (v31 >> 24)) ^ *(&qtable_shift16_2[0] + ((v27 >> 16) & 0xFF)) ^ *(&qtable_shift8_2[0]
                                                                                            + ((v29 >> 8) & 0xFF)) ^ *(&qtable_shift_byte_2[0] + (v33  & 0xFF)) ^ *v26;
      v6 = v26 + 1;
      v7 = *(&qtable_shift24_2[0] + (v27 >> 24)) ^ *(&qtable_shift16_2[0] + ((v29 >> 16) & 0xFF)) ^ *(&qtable_shift8_2[0]
                                                                                            + ((v33 >> 8) & 0xFF)) ^ *(&qtable_shift_byte_2[0] + (v31 & 0xFF)) ^ *v6;
      ++v6;
      v8 = *(&qtable_shift24_2[0] + (v29 >> 24)) ^ *(&qtable_shift16_2[0] + ((v33 >> 16) & 0xFF)) ^ *(&qtable_shift8_2[0]
                                                                                            + ((v31 >> 8) & 0xFF)) ^ *(&qtable_shift_byte_2[0] + (v27 & 0xFF)) ^ *v6;
      ++v6;
      v9 = *(&qtable_shift24_2[0] + (v33 >> 24)) ^ *(&qtable_shift16_2[0] + ((v31 >> 16) & 0xFF)) ^ *(&qtable_shift8_2[0]
                                                                                            + ((v27 >> 8) & 0xFF)) ^ *(&qtable_shift_byte_2[0] + (v29 & 0xFF)) ^ *v6;
      ++v6;
      v33 = *(&qtable_shift24_2[0] + (v7 >> 24)) ^ *(&qtable_shift16_2[0] + ((v8 >> 16) & 0xFF)) ^ *(&qtable_shift8_2[0] + ((v9 >> 8) & 0xFF)) ^ *(&qtable_shift_byte_2[0] + (v5 & 0xFF)) ^ *v6;
      ++v6;
      v31 = *(&qtable_shift24_2[0] + (v8 >> 24)) ^ *(&qtable_shift16_2[0] + ((v9 >> 16) & 0xFF)) ^ *(&qtable_shift8_2[0] + ((v5 >> 8) & 0xFF)) ^ *(&qtable_shift_byte_2[0] + (v7 & 0xFF)) ^ *v6;
      ++v6;
      v27 = *(&qtable_shift24_2[0] + (v9 >> 24)) ^ *(&qtable_shift16_2[0] + ((v5 >> 16) & 0xFF)) ^ *(&qtable_shift8_2[0] + ((v7 >> 8) & 0xFF)) ^ *(&qtable_shift_byte_2[0] + (v8 & 0xFF)) ^ *v6;
      ++v6;
      v29 = *(&qtable_shift24_2[0] + (v5 >> 24)) ^ *(&qtable_shift16_2[0] + ((v7 >> 16) & 0xFF)) ^ *(&qtable_shift8_2[0] + ((v8 >> 8) & 0xFF)) ^ *(&qtable_shift_byte_2[0] + (v9 & 0xFF)) ^ *v6;
      v26 = v6 + 1;
    }
    v10 = *(&qtable_shift24_2[0] + (v31 >> 24)) ^ *(&qtable_shift16_2[0] + ((v27 >> 16) & 0xFF)) ^ *(&qtable_shift8_2[0] + ((v29 >> 8) & 0xFF)) ^ *(&qtable_shift_byte_2[0] + (v33 & 0xFF)) ^ *v26;
    v11 = v26 + 1;
    v12 = *(&qtable_shift24_2[0] + (v27 >> 24)) ^ *(&qtable_shift16_2[0] + ((v29 >> 16) & 0xFF)) ^ *(&qtable_shift8_2[0] + ((v33 >> 8) & 0xFF)) ^ *(&qtable_shift_byte_2[0] + (v31 & 0xFF)) ^ *v11;
    ++v11;
    v13 = *(&qtable_shift24_2[0] + (v29 >> 24)) ^ *(&qtable_shift16_2[0] + ((v33 >> 16) & 0xFF)) ^ *(&qtable_shift8_2[0] + ((v31 >> 8) & 0xFF)) ^ *(&qtable_shift_byte_2[0] + (v27 & 0xFF)) ^ *v11;
    ++v11;
    v14 = *(&qtable_shift24_2[0] + (v33 >> 24)) ^ *(&qtable_shift16_2[0] + ((v31 >> 16) & 0xFF)) ^ *(&qtable_shift8_2[0] + ((v27 >> 8) & 0xFF)) ^ *(&qtable_shift_byte_2[0] + (v29 & 0xFF)) ^ *v11;
    ++v11;
    v34 = (*(&qtable_def_2[0] + (v12 >> 24)) << 24) ^ (*(&qtable_def_2[0] + ((v13 >> 16) & 0xFF)) << 16) ^ (*(&qtable_def_2[0] + ((v14 >> 8) & 0xFF)) << 8) ^ *(&qtable_def_2[0] + (v10 & 0xFF)) ^ *v11;
    ++v11;
    v32 = (*(&qtable_def_2[0] + (v13 >> 24)) << 24) ^ (*(&qtable_def_2[0] + ((v14 >> 16) & 0xFF)) << 16) ^ (*(&qtable_def_2[0] + ((v10 >> 8) & 0xFF)) << 8) ^ *(&qtable_def_2[0] + (v12 & 0xFF)) ^ *v11;
    ++v11;
    v28 = (*(&qtable_def_2[0] + (v14 >> 24)) << 24) ^ (*(&qtable_def_2[0] + ((v10 >> 16) & 0xFF)) << 16) ^ (*(&qtable_def_2[0] + ((v12 >> 8) & 0xFF)) << 8) ^ *(&qtable_def_2[0] + (v13 & 0xFF)) ^ *v11;
    v30 = (*(&qtable_def_2[0] + (v10 >> 24)) << 24) ^ (*(&qtable_def_2[0] + ((v12 >> 16) & 0xFF)) << 16) ^ (*(&qtable_def_2[0] + ((v13 >> 8) & 0xFF)) << 8) ^ *(&qtable_def_2[0] + (v14 & 0xFF)) ^ v11[1];
  }
  /*
  *pOut = v34;
  *(pOut + 1) = v32 >> 8;
  *(pOut + 2) = v28 >> 16;
  *(pOut + 3) = v30 >> 24;
  

  *pOut = v34;
  *(pOut + 1) = v34 >> 8;
  *(pOut + 2) = v34 >> 16;
  *(pOut + 3) = v34 >> 24;

  *(pOut + 4) = v32;
  *(pOut + 5) = v32 >> 8;
  *(pOut + 6) = v32 >> 16;
  *(pOut + 7) = v32 >> 24;

  *(pOut + 8) = v28;
  *(pOut + 9) = v28 >> 8;
  *(pOut + 10) = v28 >> 16;
  *(pOut + 11) = v28 >> 24;

  *(pOut + 12) = v30;
  *(pOut + 13) = v30 >> 8;
  *(pOut + 14) = v30 >> 16;
  *(pOut + 15) = v30 >> 24;

  return 0i64;
}*/

__int64 __declspec(naked) qwtable(LPDWORD a1, size_t a2, LPDWORD pSource, LPBYTE pOut)
{
__asm
	{
	mov [rsp+0x20], r9
	mov [rsp+0x18], r8
	mov [rsp+0x10], edx
	mov [rsp+0x8], rcx
	sub rsp, 0x38
	mov rax, [rsp+0x40]
	mov rax, [rax+0x8]
	mov [rsp], rax
	mov eax, 0x1
	imul rax, rax, 0x0
	mov rcx, [rsp+0x50]
	movzx eax, byte ptr [rcx+rax*1]
	mov ecx, 0x1
	imul rcx, rcx, 0x1
	mov rdx, [rsp+0x50]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x8
	or eax, ecx
	mov ecx, 0x1
	imul rcx, rcx, 0x2
	mov rdx, [rsp+0x50]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x10
	or eax, ecx
	mov ecx, 0x1
	imul rcx, rcx, 0x3
	mov rdx, [rsp+0x50]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x18
	or eax, ecx
	mov [rsp+0x14], eax
	mov rax, [rsp]
	mov eax, [rax]
	mov ecx, [rsp+0x14]
	xor ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, 0x1
	imul rax, rax, 0x4
	mov rcx, [rsp+0x50]
	movzx eax, byte ptr [rcx+rax*1]
	mov ecx, 0x1
	imul rcx, rcx, 0x5
	mov rdx, [rsp+0x50]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x8
	or eax, ecx
	mov ecx, 0x1
	imul rcx, rcx, 0x6
	mov rdx, [rsp+0x50]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x10
	or eax, ecx
	mov ecx, 0x1
	imul rcx, rcx, 0x7
	mov rdx, [rsp+0x50]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x18
	or eax, ecx
	mov [rsp+0x10], eax
	mov rax, [rsp]
	mov eax, [rax]
	mov ecx, [rsp+0x10]
	xor ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, 0x1
	imul rax, rax, 0x8
	mov rcx, [rsp+0x50]
	movzx eax, byte ptr [rcx+rax*1]
	mov ecx, 0x1
	imul rcx, rcx, 0x9
	mov rdx, [rsp+0x50]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x8
	or eax, ecx
	mov ecx, 0x1
	imul rcx, rcx, 0xA
	mov rdx, [rsp+0x50]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x10
	or eax, ecx
	mov ecx, 0x1
	imul rcx, rcx, 0xB
	mov rdx, [rsp+0x50]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x18
	or eax, ecx
	mov [rsp+0x8], eax
	mov rax, [rsp]
	mov eax, [rax]
	mov ecx, [rsp+0x8]
	xor ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, 0x1
	imul rax, rax, 0xC
	mov rcx, [rsp+0x50]
	movzx eax, byte ptr [rcx+rax*1]
	mov ecx, 0x1
	imul rcx, rcx, 0xD
	mov rdx, [rsp+0x50]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x8
	or eax, ecx
	mov ecx, 0x1
	imul rcx, rcx, 0xE
	mov rdx, [rsp+0x50]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x10
	or eax, ecx
	mov ecx, 0x1
	imul rcx, rcx, 0xF
	mov rdx, [rsp+0x50]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x18
	or eax, ecx
	mov [rsp+0xC], eax
	mov rax, [rsp]
	mov eax, [rax]
	mov ecx, [rsp+0xC]
	xor ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	cmp dword ptr [rsp+0x48], 0x0
	jnz L00000004
	mov rax, [rsp+0x40]
	mov eax, [rax]
	sar eax, 0x1
	dec eax
	mov [rsp+0x28], eax
	jmp short L00000002

L00000001:
	mov eax, [rsp+0x28]
	dec eax
	mov [rsp+0x28], eax

L00000002:
	cmp dword ptr [rsp+0x28], 0x0
	jle L00000003
	mov eax, [rsp+0x14]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte_2]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x8]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x10]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24_2]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x20], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x10]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte_2]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0xC]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x8]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24_2]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x24], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x8]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte_2]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x14]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0xC]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24_2]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x1C], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0xC]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte_2]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x10]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x14]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24_2]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x18], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x20]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte_2]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x1C]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x24]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24_2]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x14], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x24]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte_2]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x18]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x1C]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24_2]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x10], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x1C]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte_2]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x20]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x18]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24_2]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x8], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x18]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte_2]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x24]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x20]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24_2]
	xor eax, [rdx+rcx*4]
	mov [rsp+0xC], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	jmp L00000001

L00000003:
	mov eax, [rsp+0x14]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte_2]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x8]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x10]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24_2]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x20], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x10]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte_2]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0xC]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x8]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24_2]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x24], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x8]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte_2]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x14]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0xC]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24_2]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x1C], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0xC]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte_2]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x10]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16_2]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x14]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24_2]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x18], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x20]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_def_2]
	movzx eax, byte ptr [rcx+rax*1]
	mov rcx, [rsp]
	mov ecx, [rcx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def_2]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x8
	xor eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def_2]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x10
	xor eax, ecx
	mov ecx, [rsp+0x24]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def_2]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x18
	xor eax, ecx
	mov [rsp+0x14], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x24]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_def_2]
	movzx eax, byte ptr [rcx+rax*1]
	mov rcx, [rsp]
	mov ecx, [rcx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def_2]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x8
	xor eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def_2]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x10
	xor eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def_2]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x18
	xor eax, ecx
	mov [rsp+0x10], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x1C]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_def_2]
	movzx eax, byte ptr [rcx+rax*1]
	mov rcx, [rsp]
	mov ecx, [rcx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def_2]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x8
	xor eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def_2]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x10
	xor eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def_2]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x18
	xor eax, ecx
	mov [rsp+0x8], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x18]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_def_2]
	movzx eax, byte ptr [rcx+rax*1]
	mov rcx, [rsp]
	mov ecx, [rcx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def_2]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x8
	xor eax, ecx
	mov ecx, [rsp+0x24]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def_2]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x10
	xor eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def_2]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x18
	xor eax, ecx
	mov [rsp+0xC], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	jmp L00000008

L00000004:
	mov rax, [rsp+0x40]
	mov eax, [rax]
	sar eax, 0x1
	dec eax
	mov [rsp+0x28], eax
	jmp short L00000006

L00000005:
	mov eax, [rsp+0x28]
	dec eax
	mov [rsp+0x28], eax

L00000006:
	cmp dword ptr [rsp+0x28], 0x0
	jle L00000007
	mov eax, [rsp+0x14]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x8]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0xC]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x20], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x10]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0xC]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x14]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x24], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x8]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x14]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x10]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x1C], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0xC]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x10]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x8]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x18], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x20]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x1C]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x18]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x14], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x24]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x18]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x20]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x10], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x1C]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x20]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x24]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x8], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x18]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x24]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x1C]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24]
	xor eax, [rdx+rcx*4]
	mov [rsp+0xC], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	jmp L00000005

L00000007:
	mov eax, [rsp+0x14]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x8]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0xC]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x20], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x10]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0xC]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x14]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x24], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x8]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x14]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x10]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x1C], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0xC]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_shift_byte]
	mov rdx, [rsp]
	mov eax, [rcx+rax*4]
	mov ecx, [rdx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift8]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x10]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift16]
	xor eax, [rdx+rcx*4]
	mov ecx, [rsp+0x8]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_shift24]
	xor eax, [rdx+rcx*4]
	mov [rsp+0x18], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x20]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_def]
	movzx eax, byte ptr [rcx+rax*1]
	mov rcx, [rsp]
	mov ecx, [rcx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x8
	xor eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x10
	xor eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x18
	xor eax, ecx
	mov [rsp+0x14], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x24]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_def]
	movzx eax, byte ptr [rcx+rax*1]
	mov rcx, [rsp]
	mov ecx, [rcx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x8
	xor eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x10
	xor eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x18
	xor eax, ecx
	mov [rsp+0x10], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x1C]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_def]
	movzx eax, byte ptr [rcx+rax*1]
	mov rcx, [rsp]
	mov ecx, [rcx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x8
	xor eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x10
	xor eax, ecx
	mov ecx, [rsp+0x24]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x18
	xor eax, ecx
	mov [rsp+0x8], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax
	mov eax, [rsp+0x18]
	and eax, 0xFF
	mov eax, eax
	lea rcx, [qtable_def]
	movzx eax, byte ptr [rcx+rax*1]
	mov rcx, [rsp]
	mov ecx, [rcx]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x8
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x8
	xor eax, ecx
	mov ecx, [rsp+0x24]
	shr ecx, 0x10
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x10
	xor eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x18
	and ecx, 0xFF
	mov ecx, ecx
	lea rdx, [qtable_def]
	movzx ecx, byte ptr [rdx+rcx*1]
	shl ecx, 0x18
	xor eax, ecx
	mov [rsp+0xC], eax
	mov rax, [rsp]
	add rax, 0x4
	mov [rsp], rax

L00000008:
	mov eax, 0x1
	imul rax, rax, 0x0
	mov rcx, [rsp+0x58]
	movzx edx, byte ptr [rsp+0x14]
	mov [rcx+rax*1], dl
	mov eax, [rsp+0x14]
	shr eax, 0x8
	mov ecx, 0x1
	imul rcx, rcx, 0x1
	mov rdx, [rsp+0x58]
	mov [rdx+rcx*1], al
	mov eax, [rsp+0x14]
	shr eax, 0x10
	mov ecx, 0x1
	imul rcx, rcx, 0x2
	mov rdx, [rsp+0x58]
	mov [rdx+rcx*1], al
	mov eax, [rsp+0x14]
	shr eax, 0x18
	mov ecx, 0x1
	imul rcx, rcx, 0x3
	mov rdx, [rsp+0x58]
	mov [rdx+rcx*1], al
	mov eax, 0x1
	imul rax, rax, 0x4
	mov rcx, [rsp+0x58]
	movzx edx, byte ptr [rsp+0x10]
	mov [rcx+rax*1], dl
	mov eax, [rsp+0x10]
	shr eax, 0x8
	mov ecx, 0x1
	imul rcx, rcx, 0x5
	mov rdx, [rsp+0x58]
	mov [rdx+rcx*1], al
	mov eax, [rsp+0x10]
	shr eax, 0x10
	mov ecx, 0x1
	imul rcx, rcx, 0x6
	mov rdx, [rsp+0x58]
	mov [rdx+rcx*1], al
	mov eax, [rsp+0x10]
	shr eax, 0x18
	mov ecx, 0x1
	imul rcx, rcx, 0x7
	mov rdx, [rsp+0x58]
	mov [rdx+rcx*1], al
	mov eax, 0x1
	imul rax, rax, 0x8
	mov rcx, [rsp+0x58]
	movzx edx, byte ptr [rsp+0x8]
	mov [rcx+rax*1], dl
	mov eax, [rsp+0x8]
	shr eax, 0x8
	mov ecx, 0x1
	imul rcx, rcx, 0x9
	mov rdx, [rsp+0x58]
	mov [rdx+rcx*1], al
	mov eax, [rsp+0x8]
	shr eax, 0x10
	mov ecx, 0x1
	imul rcx, rcx, 0xA
	mov rdx, [rsp+0x58]
	mov [rdx+rcx*1], al
	mov eax, [rsp+0x8]
	shr eax, 0x18
	mov ecx, 0x1
	imul rcx, rcx, 0xB
	mov rdx, [rsp+0x58]
	mov [rdx+rcx*1], al
	mov eax, 0x1
	imul rax, rax, 0xC
	mov rcx, [rsp+0x58]
	movzx edx, byte ptr [rsp+0xC]
	mov [rcx+rax*1], dl
	mov eax, [rsp+0xC]
	shr eax, 0x8
	mov ecx, 0x1
	imul rcx, rcx, 0xD
	mov rdx, [rsp+0x58]
	mov [rdx+rcx*1], al
	mov eax, [rsp+0xC]
	shr eax, 0x10
	mov ecx, 0x1
	imul rcx, rcx, 0xE
	mov rdx, [rsp+0x58]
	mov [rdx+rcx*1], al
	mov eax, [rsp+0xC]
	shr eax, 0x18
	mov ecx, 0x1
	imul rcx, rcx, 0xF
	mov rdx, [rsp+0x58]
	mov [rdx+rcx*1], al
	xor eax, eax
	add rsp, 0x38
	ret
	}
}

size_t __fastcall EA_Origin__dbeadata_verify_HASH(__in DWORD* pSource, __in size_t SourceDWORDSize)
{
	/* Œ–»√»Õ¿À
__int64 __fastcall sub_141A752A0(__int64 a1, unsigned int a2)
{
  unsigned int i; // [rsp+10h] [rbp-18h]
  unsigned int v4; // [rsp+14h] [rbp-14h]

  v4 = 0;
  for ( i = 0; i < a2; ++i )
    v4 += *(unsigned __int8 *)(a1 + (signed int)i);
  return v4;
}
*/
	register size_t Result = NULL;
	do
	{
		Result += *pSource;
	}while(--SourceDWORDSize);
return Result;
}


size_t __declspec(naked) EA_Origin__DLF_key_wick_decrypt(__in byte* pKEY_wick, __in LPBYTE pSource, __in size_t SourceDWORDSize, __in DWORD* pKEY_sick, __in BYTE* pKey_HOSE)
{
	__asm
	{

	mov [rsp+0x20], r9
	mov [rsp+0x18], r8
	mov [rsp+0x10], rdx
	mov [rsp+0x8], rcx
	sub rsp, 0x6C8
	mov eax, 0x4
	imul rax, rax, 0x1
	mov dword ptr [rsp+rax*1+0x658], 0x6EDDBDF7
	mov eax, 0x4
	imul rax, rax, 0x3
	mov dword ptr [rsp+rax*1+0x658], 0x8F4266E4
	mov eax, 0x4
	imul rax, rax, 0x0
	mov dword ptr [rsp+rax*1+0x658], 0xAEA3740
	mov eax, 0x4
	imul rax, rax, 0x4
	mov dword ptr [rsp+rax*1+0x658], 0x6777F62F
	mov eax, 0x4
	imul rax, rax, 0x2
	mov dword ptr [rsp+rax*1+0x658], 0x3C5FF13D
	mov dword ptr [rsp+0x654], 0x0
	mov dword ptr [rsp+0x650], 0x0
	mov dword ptr [rsp+0x158], 0x0
	jmp short L00000002

L00000001:
	mov eax, [rsp+0x158]
	inc eax
	mov [rsp+0x158], eax

L00000002:
	cmp dword ptr [rsp+0x158], 0x5
	jnl short L00000005
	mov eax, [rsp+0x158]
	and eax, 0x1
	test eax, eax
	jnz short L00000003
	movsxd rax, dword ptr [rsp+0x158]
	mov eax, [rsp+rax*4+0x658]
	sub eax, 0xA3A5143F
	movsxd rcx, dword ptr [rsp+0x158]
	mov [rsp+rcx*4+0x658], eax
	jmp short L00000004

L00000003:
	movsxd rax, dword ptr [rsp+0x158]
	mov eax, [rsp+rax*4+0x658]
	sub eax, 0x7F10126E
	movsxd rcx, dword ptr [rsp+0x158]
	mov [rsp+rcx*4+0x658], eax

L00000004:
	jmp short L00000001

L00000005:
	mov rax, [rsp+0x6E8]
	mov eax, [rax]
	inc eax
	mov rcx, [rsp+0x6E8]
	mov [rcx], eax
	mov eax, [rsp+0x6E0]
	mov [rsp+0x150], eax
	mov rax, [rsp+0x6D8]
	mov [rsp+0x200], rax
	mov eax, [rsp+0x650]
	mov [rsp+0x208], eax
	mov eax, [rsp+0x150]
	shl eax, 0x3
	mov ecx, [rsp+0x208]
	add ecx, eax
	mov [rsp+0x4F8], ecx
	mov eax, [rsp+0x4F8]
	mov [rsp+0x650], eax
	mov eax, [rsp+0x208]
	cmp [rsp+0x4F8], eax
	jnb short L00000006
	mov eax, [rsp+0x654]
	inc eax
	mov [rsp+0x654], eax

L00000006:
	mov eax, [rsp+0x150]
	sar eax, 0x1D
	add eax, [rsp+0x654]
	mov [rsp+0x654], eax
	mov eax, [rsp+0x208]
	shr eax, 0x3
	and eax, 0x3F
	mov [rsp+0x160], eax
	cmp dword ptr [rsp+0x160], 0x0
	jz L00000019
	movsxd rax, dword ptr [rsp+0x160]
	lea rax, [rsp+rax*1+0x66C]
	mov [rsp+0x6B0], rax
	mov eax, 0x40
	sub eax, [rsp+0x160]
	mov [rsp+0x160], eax
	mov eax, [rsp+0x160]
	cmp [rsp+0x150], eax
	jnl short L00000010
	mov dword ptr [rsp+0x1B4], 0x0
	jmp short L00000008

L00000007:
	mov eax, [rsp+0x1B4]
	inc eax
	mov [rsp+0x1B4], eax

L00000008:
	mov eax, [rsp+0x150]
	cmp [rsp+0x1B4], eax
	jnl short L00000009
	movsxd rax, dword ptr [rsp+0x1B4]
	movsxd rcx, dword ptr [rsp+0x1B4]
	mov rdx, [rsp+0x6B0]
	mov r8, [rsp+0x200]
	movzx eax, byte ptr [r8+rax*1]
	mov [rdx+rcx*1], al
	jmp short L00000007

L00000009:
	jmp L00000031

L00000010:
	mov dword ptr [rsp+0x1AC], 0x0
	jmp short L00000012

L00000011:
	mov eax, [rsp+0x1AC]
	inc eax
	mov [rsp+0x1AC], eax

L00000012:
	mov eax, [rsp+0x160]
	cmp [rsp+0x1AC], eax
	jnl short L00000013
	movsxd rax, dword ptr [rsp+0x1AC]
	movsxd rcx, dword ptr [rsp+0x1AC]
	mov rdx, [rsp+0x6B0]
	mov r8, [rsp+0x200]
	movzx eax, byte ptr [r8+rax*1]
	mov [rdx+rcx*1], al
	jmp short L00000011

L00000013:
	mov dword ptr [rsp+0x198], 0x40
	lea rax, [rsp+0x66C]
	mov [rsp+0x618], rax
	movsxd rax, dword ptr [rsp+0x198]
	xor edx, edx
	mov ecx, 0x4
	div rcx
	mov [rsp+0x198], eax

L00000014:
	mov eax, [rsp+0x198]
	mov [rsp+0x638], eax
	mov eax, [rsp+0x198]
	dec eax
	mov [rsp+0x198], eax
	cmp dword ptr [rsp+0x638], 0x0
	jz short L00000015
	mov rax, [rsp+0x618]
	mov eax, [rax]
	mov [rsp+0x1C0], eax
	mov eax, [rsp+0x1C0]
	and eax, 0xFF00FF00
	shr eax, 0x8
	mov ecx, [rsp+0x1C0]
	and ecx, 0xFF00FF
	shl ecx, 0x8
	or eax, ecx
	mov [rsp+0x1C0], eax
	mov eax, [rsp+0x1C0]
	shl eax, 0x10
	mov ecx, [rsp+0x1C0]
	shr ecx, 0x10
	or eax, ecx
	mov rcx, [rsp+0x618]
	mov [rcx], eax
	mov rax, [rsp+0x618]
	add rax, 0x4
	mov [rsp+0x618], rax
	jmp L00000014

L00000015:
	lea rax, [rsp+0x658]
	mov [rsp+0x188], rax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov rcx, [rsp+0x188]
	mov eax, [rcx+rax*1]
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov rcx, [rsp+0x188]
	mov eax, [rcx+rax*1]
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov rcx, [rsp+0x188]
	mov eax, [rcx+rax*1]
	mov [rsp+0x10], eax
	mov dword ptr [rsp+0x1C8], 0x0
	jmp short L00000017

L00000016:
	mov eax, [rsp+0x1C8]
	inc eax
	mov [rsp+0x1C8], eax

L00000017:
	cmp dword ptr [rsp+0x1C8], 0x10
	jnl short L00000018
	movsxd rax, dword ptr [rsp+0x1C8]
	movsxd rcx, dword ptr [rsp+0x1C8]
	mov eax, [rsp+rax*4+0x66C]
	mov [rsp+rcx*4+0x110], eax
	jmp short L00000016

L00000018:
	mov eax, 0x4
	imul rax, rax, 0x2
	mov rcx, [rsp+0x188]
	mov eax, [rcx+rax*1]
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov rcx, [rsp+0x188]
	mov eax, [rcx+rax*1]
	mov [rsp+0x34], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x5
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x8]
	mov edx, [rsp+0x38]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x34]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x8]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0xA25D7710
	mov [rsp+0x10], eax
	mov eax, [rsp+0x10]
	shl eax, 0x5
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x38]
	mov edx, [rsp+0x34]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x38]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0xA25D7710
	mov [rsp+0x8], eax
	mov eax, [rsp+0x8]
	shl eax, 0x5
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x34]
	mov edx, [rsp+0x3C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x10]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x34]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0xA25D7710
	mov [rsp+0x38], eax
	mov eax, [rsp+0x38]
	shl eax, 0x5
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x3C]
	mov edx, [rsp+0x10]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x8]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3C]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0xA25D7710
	mov [rsp+0x34], eax
	mov eax, [rsp+0x34]
	shl eax, 0x5
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x10]
	mov edx, [rsp+0x8]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x38]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x10]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0xA25D7710
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x5
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x8]
	mov edx, [rsp+0x38]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x34]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x8]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0xA25D7710
	mov [rsp+0x10], eax
	mov eax, [rsp+0x10]
	shl eax, 0x5
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x38]
	mov edx, [rsp+0x34]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x38]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0xA25D7710
	mov [rsp+0x8], eax
	mov eax, [rsp+0x8]
	shl eax, 0x5
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x34]
	mov edx, [rsp+0x3C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x10]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x34]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0xA25D7710
	mov [rsp+0x38], eax
	mov eax, [rsp+0x38]
	shl eax, 0x5
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x3C]
	mov edx, [rsp+0x10]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x8]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3C]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0xA25D7710
	mov [rsp+0x34], eax
	mov eax, [rsp+0x34]
	shl eax, 0x5
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x10]
	mov edx, [rsp+0x8]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x38]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x10]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0xA25D7710
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x5
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x8]
	mov edx, [rsp+0x38]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x34]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x8]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0xA25D7710
	mov [rsp+0x10], eax
	mov eax, [rsp+0x10]
	shl eax, 0x5
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x38]
	mov edx, [rsp+0x34]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x38]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0xA25D7710
	mov [rsp+0x8], eax
	mov eax, [rsp+0x8]
	shl eax, 0x5
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x34]
	mov edx, [rsp+0x3C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x10]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x34]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0xA25D7710
	mov [rsp+0x38], eax
	mov eax, [rsp+0x38]
	shl eax, 0x5
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x3C]
	mov edx, [rsp+0x10]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x8]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3C]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0xA25D7710
	mov [rsp+0x34], eax
	mov eax, [rsp+0x34]
	shl eax, 0x5
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x10]
	mov edx, [rsp+0x8]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x38]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x10]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0xA25D7710
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x5
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x8]
	mov edx, [rsp+0x38]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x34]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x8]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x110]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0xA25D7710
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5C0], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x5C0]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5C0]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0xA25D7710
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5C8], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x5C8]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5C8]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0xA25D7710
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5D0], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x5D0]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5D0]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0xA25D7710
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5D8], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x5D8]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5D8]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0xA25D7710
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5E0], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x5E0]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x8]
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	mov edx, [rsp+0x3C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5E0]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0x3A368458
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x60C], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x60C]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x38]
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x60C]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0x3A368458
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x614], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x614]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x34]
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x614]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0x3A368458
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5F8], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x5F8]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x3C]
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5F8]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0x3A368458
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x610], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x610]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x8]
	mov ecx, [rsp+0x38]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x10]
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x610]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0x3A368458
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x428], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x428]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x8]
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	mov edx, [rsp+0x3C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x428]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0x3A368458
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x218], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x218]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x38]
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x218]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0x3A368458
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5F0], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x5F0]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x34]
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5F0]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0x3A368458
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x220], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x220]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x3C]
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x220]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0x3A368458
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x430], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x430]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x8]
	mov ecx, [rsp+0x38]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x10]
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x430]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0x3A368458
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x228], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x228]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x8]
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	mov edx, [rsp+0x3C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x228]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0x3A368458
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x538], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x538]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x38]
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x538]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0x3A368458
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x230], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x230]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x34]
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x230]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0x3A368458
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x438], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x438]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x3C]
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x438]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0x3A368458
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x238], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x238]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x8]
	mov ecx, [rsp+0x38]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x10]
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x238]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0x3A368458
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5BC], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x5BC]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x8]
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	mov edx, [rsp+0x3C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5BC]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0x3A368458
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x240], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x240]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x38]
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x240]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0x3A368458
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x440], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x440]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x34]
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x440]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0x3A368458
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x248], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x248]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x3C]
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x248]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0x3A368458
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x540], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x540]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x8]
	mov ecx, [rsp+0x38]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x10]
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x540]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0x3A368458
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x250], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x250]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	mov edx, [rsp+0x34]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	mov edx, [rsp+0x3C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x250]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0xA25D7710
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x448], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x448]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	mov edx, [rsp+0x3C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x448]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0xA25D7710
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x258], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x258]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	mov edx, [rsp+0x10]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x258]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0xA25D7710
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5FC], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x5FC]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	mov edx, [rsp+0x8]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5FC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0xA25D7710
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x260], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x260]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x8]
	mov ecx, [rsp+0x38]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	mov edx, [rsp+0x38]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x260]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0xA25D7710
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x450], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x450]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	mov edx, [rsp+0x34]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	mov edx, [rsp+0x3C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x450]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0xA25D7710
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x268], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x268]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	mov edx, [rsp+0x3C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x268]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0xA25D7710
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x548], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x548]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	mov edx, [rsp+0x10]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x548]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0xA25D7710
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x270], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x270]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	mov edx, [rsp+0x8]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x270]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0xA25D7710
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x458], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x458]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x8]
	mov ecx, [rsp+0x38]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	mov edx, [rsp+0x38]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x458]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0xA25D7710
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x278], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x278]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	mov edx, [rsp+0x34]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	mov edx, [rsp+0x3C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x278]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0xA25D7710
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5C4], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x5C4]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	mov edx, [rsp+0x3C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5C4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0xA25D7710
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x280], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x280]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	mov edx, [rsp+0x10]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x280]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0xA25D7710
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x460], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x460]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	mov edx, [rsp+0x8]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x460]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0xA25D7710
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x288], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x288]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x8]
	mov ecx, [rsp+0x38]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	mov edx, [rsp+0x38]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x288]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0xA25D7710
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x550], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x550]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	mov edx, [rsp+0x34]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	mov edx, [rsp+0x3C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x550]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0xA25D7710
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x290], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x290]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	mov edx, [rsp+0x3C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x290]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0xA25D7710
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x468], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x468]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	mov edx, [rsp+0x10]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x468]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0xA25D7710
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x298], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x298]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x3C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	mov edx, [rsp+0x8]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x298]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0xA25D7710
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x604], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x604]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x8]
	mov ecx, [rsp+0x38]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x10]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x8]
	mov edx, [rsp+0x38]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x604]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0xA25D7710
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2A0], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x2A0]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x8]
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	mov edx, [rsp+0x3C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2A0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0x3A368458
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x470], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x470]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x38]
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x470]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0x3A368458
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2A8], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x2A8]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x34]
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2A8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0x3A368458
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x558], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x558]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x3C]
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x558]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0x3A368458
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2B0], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x2B0]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x8]
	mov ecx, [rsp+0x38]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x10]
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2B0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0x3A368458
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x478], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x478]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x8]
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	mov edx, [rsp+0x3C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x478]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0x3A368458
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2B8], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x2B8]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x38]
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2B8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0x3A368458
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5CC], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x5CC]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x34]
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5CC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0x3A368458
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2C0], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x2C0]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x3C]
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2C0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0x3A368458
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x480], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x480]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x8]
	mov ecx, [rsp+0x38]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x10]
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x480]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0x3A368458
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2C8], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x2C8]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x8]
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	mov edx, [rsp+0x3C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2C8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0x3A368458
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x560], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x560]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x38]
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x560]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0x3A368458
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2D0], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x2D0]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x34]
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2D0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0x3A368458
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x488], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x488]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x3C]
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x488]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0x3A368458
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2D8], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x2D8]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x8]
	mov ecx, [rsp+0x38]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x10]
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2D8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0x3A368458
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x608], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x608]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x38]
	mov ecx, [rsp+0x34]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x8]
	mov ecx, [rsp+0x3C]
	shr ecx, 0x1B
	mov edx, [rsp+0x3C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x608]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x10]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x34]
	shl eax, 0x1E
	mov ecx, [rsp+0x34]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x10]
	sub eax, 0x3A368458
	mov [rsp+0x10], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2E0], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x2E0]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x34]
	mov ecx, [rsp+0x3C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x38]
	mov ecx, [rsp+0x10]
	shr ecx, 0x1B
	mov edx, [rsp+0x10]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2E0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x8]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x3C]
	shl eax, 0x1E
	mov ecx, [rsp+0x3C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x8]
	sub eax, 0x3A368458
	mov [rsp+0x8], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x490], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x490]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x3C]
	mov ecx, [rsp+0x10]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x34]
	mov ecx, [rsp+0x8]
	shr ecx, 0x1B
	mov edx, [rsp+0x8]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x490]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x38]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x10]
	shl eax, 0x1E
	mov ecx, [rsp+0x10]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x10], eax
	mov eax, [rsp+0x38]
	sub eax, 0x3A368458
	mov [rsp+0x38], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2E8], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x2E8]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x10]
	mov ecx, [rsp+0x8]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x3C]
	mov ecx, [rsp+0x38]
	shr ecx, 0x1B
	mov edx, [rsp+0x38]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2E8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x34]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x34], eax
	mov eax, [rsp+0x8]
	shl eax, 0x1E
	mov ecx, [rsp+0x8]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x8], eax
	mov eax, [rsp+0x34]
	sub eax, 0x3A368458
	mov [rsp+0x34], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x110]
	mov eax, [rsp+rax*1+0x110]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x110]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x110]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0x110]
	mov ecx, [rsp+rcx*1+0x110]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x110]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x110]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x568], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x568]
	mov [rsp+rax*1+0x110], ecx
	mov eax, [rsp+0x8]
	mov ecx, [rsp+0x38]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x10]
	mov ecx, [rsp+0x34]
	shr ecx, 0x1B
	mov edx, [rsp+0x34]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x568]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x3C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x3C], eax
	mov eax, [rsp+0x38]
	shl eax, 0x1E
	mov ecx, [rsp+0x38]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x38], eax
	mov eax, [rsp+0x3C]
	sub eax, 0x3A368458
	mov [rsp+0x3C], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov rcx, [rsp+0x188]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x38]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov rdx, [rsp+0x188]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov rcx, [rsp+0x188]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x8]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov rdx, [rsp+0x188]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov rcx, [rsp+0x188]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x34]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov rdx, [rsp+0x188]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov rcx, [rsp+0x188]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x10]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov rdx, [rsp+0x188]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov rcx, [rsp+0x188]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x3C]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov rdx, [rsp+0x188]
	mov [rdx+rcx*1], eax
	movsxd rax, dword ptr [rsp+0x160]
	mov rcx, [rsp+0x200]
	add rcx, rax
	mov rax, rcx
	mov [rsp+0x200], rax
	mov eax, [rsp+0x160]
	mov ecx, [rsp+0x150]
	sub ecx, eax
	mov eax, ecx
	mov [rsp+0x150], eax

L00000019:
	cmp dword ptr [rsp+0x150], 0x40
	jl L00000028
	mov dword ptr [rsp+0x1D0], 0x0
	jmp short L00000021

L00000020:
	mov eax, [rsp+0x1D0]
	inc eax
	mov [rsp+0x1D0], eax

L00000021:
	cmp dword ptr [rsp+0x1D0], 0x10
	jnl short L00000022
	movsxd rax, dword ptr [rsp+0x1D0]
	movsxd rcx, dword ptr [rsp+0x1D0]
	mov rdx, [rsp+0x200]
	mov eax, [rdx+rax*4]
	mov [rsp+rcx*4+0x66C], eax
	jmp short L00000020

L00000022:
	mov dword ptr [rsp+0x1E0], 0x40
	lea rax, [rsp+0x66C]
	mov [rsp+0x628], rax
	movsxd rax, dword ptr [rsp+0x1E0]
	xor edx, edx
	mov ecx, 0x4
	div rcx
	mov [rsp+0x1E0], eax

L00000023:
	mov eax, [rsp+0x1E0]
	mov [rsp+0x640], eax
	mov eax, [rsp+0x1E0]
	dec eax
	mov [rsp+0x1E0], eax
	cmp dword ptr [rsp+0x640], 0x0
	jz short L00000024
	mov rax, [rsp+0x628]
	mov eax, [rax]
	mov [rsp+0x1EC], eax
	mov eax, [rsp+0x1EC]
	and eax, 0xFF00FF00
	shr eax, 0x8
	mov ecx, [rsp+0x1EC]
	and ecx, 0xFF00FF
	shl ecx, 0x8
	or eax, ecx
	mov [rsp+0x1EC], eax
	mov eax, [rsp+0x1EC]
	shl eax, 0x10
	mov ecx, [rsp+0x1EC]
	shr ecx, 0x10
	or eax, ecx
	mov rcx, [rsp+0x628]
	mov [rcx], eax
	mov rax, [rsp+0x628]
	add rax, 0x4
	mov [rsp+0x628], rax
	jmp L00000023

L00000024:
	lea rax, [rsp+0x658]
	mov [rsp+0x168], rax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov rcx, [rsp+0x168]
	mov eax, [rcx+rax*1]
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov rcx, [rsp+0x168]
	mov eax, [rcx+rax*1]
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov rcx, [rsp+0x168]
	mov eax, [rcx+rax*1]
	mov [rsp+0x2C], eax
	mov dword ptr [rsp+0x1C4], 0x0
	jmp short L00000026

L00000025:
	mov eax, [rsp+0x1C4]
	inc eax
	mov [rsp+0x1C4], eax

L00000026:
	cmp dword ptr [rsp+0x1C4], 0x10
	jnl short L00000027
	movsxd rax, dword ptr [rsp+0x1C4]
	movsxd rcx, dword ptr [rsp+0x1C4]
	mov eax, [rsp+rax*4+0x66C]
	mov [rsp+rcx*4+0x50], eax
	jmp short L00000025

L00000027:
	mov eax, 0x4
	imul rax, rax, 0x2
	mov rcx, [rsp+0x168]
	mov eax, [rcx+rax*1]
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov rcx, [rsp+0x168]
	mov eax, [rcx+rax*1]
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x28]
	shl eax, 0x5
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x44]
	mov edx, [rsp+0x18]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x44]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0xA25D7710
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x5
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x18]
	mov edx, [rsp+0x4C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x28]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x18]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0xA25D7710
	mov [rsp+0x44], eax
	mov eax, [rsp+0x44]
	shl eax, 0x5
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x4C]
	mov edx, [rsp+0x28]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4C]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0xA25D7710
	mov [rsp+0x18], eax
	mov eax, [rsp+0x18]
	shl eax, 0x5
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x28]
	mov edx, [rsp+0x2C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x44]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x28]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0xA25D7710
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x5
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x2C]
	mov edx, [rsp+0x44]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x18]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2C]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0xA25D7710
	mov [rsp+0x28], eax
	mov eax, [rsp+0x28]
	shl eax, 0x5
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x44]
	mov edx, [rsp+0x18]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x44]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0xA25D7710
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x5
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x18]
	mov edx, [rsp+0x4C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x28]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x18]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0xA25D7710
	mov [rsp+0x44], eax
	mov eax, [rsp+0x44]
	shl eax, 0x5
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x4C]
	mov edx, [rsp+0x28]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4C]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0xA25D7710
	mov [rsp+0x18], eax
	mov eax, [rsp+0x18]
	shl eax, 0x5
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x28]
	mov edx, [rsp+0x2C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x44]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x28]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0xA25D7710
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x5
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x2C]
	mov edx, [rsp+0x44]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x18]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2C]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0xA25D7710
	mov [rsp+0x28], eax
	mov eax, [rsp+0x28]
	shl eax, 0x5
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x44]
	mov edx, [rsp+0x18]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x44]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0xA25D7710
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x5
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x18]
	mov edx, [rsp+0x4C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x28]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x18]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0xA25D7710
	mov [rsp+0x44], eax
	mov eax, [rsp+0x44]
	shl eax, 0x5
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x4C]
	mov edx, [rsp+0x28]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4C]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0xA25D7710
	mov [rsp+0x18], eax
	mov eax, [rsp+0x18]
	shl eax, 0x5
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x28]
	mov edx, [rsp+0x2C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x44]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x28]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0xA25D7710
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x5
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x2C]
	mov edx, [rsp+0x44]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x18]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2C]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0xA25D7710
	mov [rsp+0x28], eax
	mov eax, [rsp+0x28]
	shl eax, 0x5
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x44]
	mov edx, [rsp+0x18]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x44]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x50]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0xA25D7710
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2F0], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x2F0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2F0]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0xA25D7710
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x498], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x498]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x498]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0xA25D7710
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2F8], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x2F8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2F8]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0xA25D7710
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5D4], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x5D4]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5D4]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0xA25D7710
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x300], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x300]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x44]
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	mov edx, [rsp+0x28]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x300]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0x3A368458
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4A0], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x4A0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x18]
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4A0]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0x3A368458
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x308], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x308]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4C]
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x308]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0x3A368458
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x570], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x570]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x28]
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x570]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0x3A368458
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x310], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x310]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x44]
	mov ecx, [rsp+0x18]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x2C]
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x310]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0x3A368458
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4A8], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x4A8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x44]
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	mov edx, [rsp+0x28]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4A8]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0x3A368458
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x318], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x318]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x18]
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x318]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0x3A368458
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x600], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x600]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4C]
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x600]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0x3A368458
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x320], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x320]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x28]
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x320]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0x3A368458
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4B0], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x4B0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x44]
	mov ecx, [rsp+0x18]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x2C]
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4B0]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0x3A368458
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x328], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x328]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x44]
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	mov edx, [rsp+0x28]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x328]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0x3A368458
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x578], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x578]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x18]
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x578]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0x3A368458
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x330], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x330]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4C]
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x330]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0x3A368458
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4B8], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x4B8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x28]
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4B8]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0x3A368458
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x338], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x338]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x44]
	mov ecx, [rsp+0x18]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x2C]
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x338]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0x3A368458
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5DC], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x5DC]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x44]
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	mov edx, [rsp+0x28]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5DC]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0x3A368458
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x340], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x340]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x18]
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x340]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0x3A368458
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4C0], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x4C0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4C]
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4C0]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0x3A368458
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x348], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x348]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x28]
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x348]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0x3A368458
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x580], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x580]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x44]
	mov ecx, [rsp+0x18]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x2C]
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x580]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0x3A368458
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x350], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x350]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	mov edx, [rsp+0x4C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	mov edx, [rsp+0x28]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x350]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0xA25D7710
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4C8], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x4C8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	mov edx, [rsp+0x28]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4C8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0xA25D7710
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x358], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x358]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	mov edx, [rsp+0x2C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x358]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0xA25D7710
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x59C], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x59C]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	mov edx, [rsp+0x44]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x59C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0xA25D7710
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x360], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x360]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x44]
	mov ecx, [rsp+0x18]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	mov edx, [rsp+0x18]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x360]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0xA25D7710
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4D0], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x4D0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	mov edx, [rsp+0x4C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	mov edx, [rsp+0x28]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4D0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0xA25D7710
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x368], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x368]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	mov edx, [rsp+0x28]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x368]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0xA25D7710
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x588], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x588]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	mov edx, [rsp+0x2C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x588]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0xA25D7710
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x370], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x370]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	mov edx, [rsp+0x44]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x370]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0xA25D7710
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4D8], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x4D8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x44]
	mov ecx, [rsp+0x18]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	mov edx, [rsp+0x18]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4D8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0xA25D7710
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x378], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x378]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	mov edx, [rsp+0x4C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	mov edx, [rsp+0x28]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x378]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0xA25D7710
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5A0], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x5A0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	mov edx, [rsp+0x28]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5A0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0xA25D7710
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x380], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x380]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	mov edx, [rsp+0x2C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x380]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0xA25D7710
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4E0], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x4E0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	mov edx, [rsp+0x44]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4E0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0xA25D7710
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x388], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x388]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x44]
	mov ecx, [rsp+0x18]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	mov edx, [rsp+0x18]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x388]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0xA25D7710
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x590], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x590]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	mov edx, [rsp+0x4C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	mov edx, [rsp+0x28]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x590]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0xA25D7710
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x390], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x390]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	mov edx, [rsp+0x28]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x390]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0xA25D7710
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4E8], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x4E8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	mov edx, [rsp+0x2C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4E8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0xA25D7710
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x398], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x398]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x28]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	mov edx, [rsp+0x44]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x398]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0xA25D7710
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5A8], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x5A8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x44]
	mov ecx, [rsp+0x18]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x2C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x44]
	mov edx, [rsp+0x18]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5A8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0xA25D7710
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3A0], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x3A0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x44]
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	mov edx, [rsp+0x28]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3A0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0x3A368458
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4F0], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x4F0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x18]
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4F0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0x3A368458
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3A8], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x3A8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4C]
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3A8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0x3A368458
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x598], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x598]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x28]
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x598]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0x3A368458
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3B0], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x3B0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x44]
	mov ecx, [rsp+0x18]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x2C]
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3B0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0x3A368458
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x20C], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x20C]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x44]
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	mov edx, [rsp+0x28]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x20C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0x3A368458
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3B8], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x3B8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x18]
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3B8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0x3A368458
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5B0], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x5B0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4C]
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5B0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0x3A368458
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3C0], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x3C0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x28]
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3C0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0x3A368458
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x500], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x500]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x44]
	mov ecx, [rsp+0x18]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x2C]
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x500]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0x3A368458
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3C8], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x3C8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x44]
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	mov edx, [rsp+0x28]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3C8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0x3A368458
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5B8], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x5B8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x18]
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5B8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0x3A368458
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3D0], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x3D0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4C]
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3D0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0x3A368458
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x508], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x508]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x28]
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x508]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0x3A368458
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3D8], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x3D8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x44]
	mov ecx, [rsp+0x18]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x2C]
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3D8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0x3A368458
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5A4], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x5A4]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x18]
	mov ecx, [rsp+0x4C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x44]
	mov ecx, [rsp+0x28]
	shr ecx, 0x1B
	mov edx, [rsp+0x28]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5A4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x2C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x4C]
	shl eax, 0x1E
	mov ecx, [rsp+0x4C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x2C]
	sub eax, 0x3A368458
	mov [rsp+0x2C], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3E0], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x3E0]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x4C]
	mov ecx, [rsp+0x28]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x18]
	mov ecx, [rsp+0x2C]
	shr ecx, 0x1B
	mov edx, [rsp+0x2C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3E0]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x44]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x28]
	shl eax, 0x1E
	mov ecx, [rsp+0x28]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x44]
	sub eax, 0x3A368458
	mov [rsp+0x44], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x510], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x510]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x28]
	mov ecx, [rsp+0x2C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4C]
	mov ecx, [rsp+0x44]
	shr ecx, 0x1B
	mov edx, [rsp+0x44]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x510]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x18]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x2C]
	shl eax, 0x1E
	mov ecx, [rsp+0x2C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x2C], eax
	mov eax, [rsp+0x18]
	sub eax, 0x3A368458
	mov [rsp+0x18], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3E8], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x3E8]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x2C]
	mov ecx, [rsp+0x44]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x28]
	mov ecx, [rsp+0x18]
	shr ecx, 0x1B
	mov edx, [rsp+0x18]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3E8]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x4C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4C], eax
	mov eax, [rsp+0x44]
	shl eax, 0x1E
	mov ecx, [rsp+0x44]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x44], eax
	mov eax, [rsp+0x4C]
	sub eax, 0x3A368458
	mov [rsp+0x4C], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x50]
	mov eax, [rsp+rax*1+0x50]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x50]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x50]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0x50]
	mov ecx, [rsp+rcx*1+0x50]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x50]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x50]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5E4], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x5E4]
	mov [rsp+rax*1+0x50], ecx
	mov eax, [rsp+0x44]
	mov ecx, [rsp+0x18]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x2C]
	mov ecx, [rsp+0x4C]
	shr ecx, 0x1B
	mov edx, [rsp+0x4C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5E4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x28]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x28], eax
	mov eax, [rsp+0x18]
	shl eax, 0x1E
	mov ecx, [rsp+0x18]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x18], eax
	mov eax, [rsp+0x28]
	sub eax, 0x3A368458
	mov [rsp+0x28], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov rcx, [rsp+0x168]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x18]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov rdx, [rsp+0x168]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov rcx, [rsp+0x168]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x44]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov rdx, [rsp+0x168]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov rcx, [rsp+0x168]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x4C]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov rdx, [rsp+0x168]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov rcx, [rsp+0x168]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x2C]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov rdx, [rsp+0x168]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov rcx, [rsp+0x168]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x28]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov rdx, [rsp+0x168]
	mov [rdx+rcx*1], eax
	mov rax, [rsp+0x200]
	add rax, 0x40
	mov [rsp+0x200], rax
	mov eax, [rsp+0x150]
	sub eax, 0x40
	mov [rsp+0x150], eax
	jmp L00000019

L00000028:
	mov dword ptr [rsp+0x1A4], 0x0
	jmp short L00000030

L00000029:
	mov eax, [rsp+0x1A4]
	inc eax
	mov [rsp+0x1A4], eax

L00000030:
	mov eax, [rsp+0x150]
	cmp [rsp+0x1A4], eax
	jnl short L00000031
	movsxd rax, dword ptr [rsp+0x1A4]
	movsxd rcx, dword ptr [rsp+0x1A4]
	mov rdx, [rsp+0x200]
	movzx eax, byte ptr [rdx+rax*1]
	mov [rsp+rcx*1+0x66C], al
	jmp short L00000029

L00000031:
	mov rax, [rsp+0x6E8]
	mov eax, [rax]
	inc eax
	mov rcx, [rsp+0x6E8]
	mov [rcx], eax
	mov rax, [rsp+0x6F0]
	mov ecx, [rsp+0x6E0]
	mov [rax], ecx
	mov dword ptr [rsp+0x1A8], 0x3
	jmp short L00000033

L00000032:
	mov eax, [rsp+0x1A8]
	add eax, 0x52
	mov [rsp+0x1A8], eax

L00000033:
	mov eax, [rsp+0x1A8]
	mov [rsp+0x6B8], rax
	xor edx, edx
	mov rax, [rsp+0x6E0]
	mov ecx, 0x4
	div rcx
	dec rax
	mov rcx, [rsp+0x6B8]
	cmp rcx, rax
	jnb short L00000034
	mov eax, [rsp+0x1A8]
	mov rcx, [rsp+0x6D8]
	mov eax, [rcx+rax*4]
	mov ecx, [rsp+0x1A8]
	xor ecx, eax
	mov eax, ecx
	mov rcx, [rsp+0x6F0]
	add eax, [rcx]
	mov rcx, [rsp+0x6F0]
	mov [rcx], eax
	jmp short L00000032

L00000034:
	mov eax, [rsp+0x650]
	mov [rsp+0x15C], eax
	mov eax, [rsp+0x15C]
	sar eax, 0x3
	and eax, 0x3F
	mov [rsp+0x15C], eax
	movsxd rax, dword ptr [rsp+0x15C]
	lea rax, [rsp+rax*1+0x66C]
	mov [rsp+0x5E8], rax
	mov rax, [rsp+0x5E8]
	mov byte ptr [rax], 0x80
	mov rax, [rsp+0x5E8]
	inc rax
	mov [rsp+0x5E8], rax
	mov eax, 0x3F
	sub eax, [rsp+0x15C]
	mov [rsp+0x15C], eax
	cmp dword ptr [rsp+0x15C], 0x8
	jnl L00000046
	mov dword ptr [rsp+0x1F4], 0x0
	jmp short L00000036

L00000035:
	mov eax, [rsp+0x1F4]
	inc eax
	mov [rsp+0x1F4], eax

L00000036:
	mov eax, [rsp+0x15C]
	cmp [rsp+0x1F4], eax
	jnl short L00000037
	movsxd rax, dword ptr [rsp+0x1F4]
	mov rcx, [rsp+0x5E8]
	mov byte ptr [rcx+rax*1], 0x0
	jmp short L00000035

L00000037:
	mov dword ptr [rsp+0x1D8], 0x40
	lea rax, [rsp+0x66C]
	mov [rsp+0x620], rax
	movsxd rax, dword ptr [rsp+0x1D8]
	xor edx, edx
	mov ecx, 0x4
	div rcx
	mov [rsp+0x1D8], eax

L00000038:
	mov eax, [rsp+0x1D8]
	mov [rsp+0x644], eax
	mov eax, [rsp+0x1D8]
	dec eax
	mov [rsp+0x1D8], eax
	cmp dword ptr [rsp+0x644], 0x0
	jz short L00000039
	mov rax, [rsp+0x620]
	mov eax, [rax]
	mov [rsp+0x1B0], eax
	mov eax, [rsp+0x1B0]
	and eax, 0xFF00FF00
	shr eax, 0x8
	mov ecx, [rsp+0x1B0]
	and ecx, 0xFF00FF
	shl ecx, 0x8
	or eax, ecx
	mov [rsp+0x1B0], eax
	mov eax, [rsp+0x1B0]
	shl eax, 0x10
	mov ecx, [rsp+0x1B0]
	shr ecx, 0x10
	or eax, ecx
	mov rcx, [rsp+0x620]
	mov [rcx], eax
	mov rax, [rsp+0x620]
	add rax, 0x4
	mov [rsp+0x620], rax
	jmp L00000038

L00000039:
	lea rax, [rsp+0x658]
	mov [rsp+0x178], rax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov rcx, [rsp+0x178]
	mov eax, [rcx+rax*1]
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov rcx, [rsp+0x178]
	mov eax, [rcx+rax*1]
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov rcx, [rsp+0x178]
	mov eax, [rcx+rax*1]
	mov [rsp+0x20], eax
	mov dword ptr [rsp+0x1CC], 0x0
	jmp short L00000041

L00000040:
	mov eax, [rsp+0x1CC]
	inc eax
	mov [rsp+0x1CC], eax

L00000041:
	cmp dword ptr [rsp+0x1CC], 0x10
	jnl short L00000042
	movsxd rax, dword ptr [rsp+0x1CC]
	movsxd rcx, dword ptr [rsp+0x1CC]
	mov eax, [rsp+rax*4+0x66C]
	mov [rsp+rcx*4+0x90], eax
	jmp short L00000040

L00000042:
	mov eax, 0x4
	imul rax, rax, 0x2
	mov rcx, [rsp+0x178]
	mov eax, [rcx+rax*1]
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov rcx, [rsp+0x178]
	mov eax, [rcx+rax*1]
	mov [rsp+0x40], eax
	mov eax, [rsp+0x24]
	shl eax, 0x5
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x30]
	mov edx, [rsp+0x48]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x40]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x30]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0xA25D7710
	mov [rsp+0x20], eax
	mov eax, [rsp+0x20]
	shl eax, 0x5
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x48]
	mov edx, [rsp+0x40]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x24]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x48]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0xA25D7710
	mov [rsp+0x30], eax
	mov eax, [rsp+0x30]
	shl eax, 0x5
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x40]
	mov edx, [rsp+0x24]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x20]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x40]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0xA25D7710
	mov [rsp+0x48], eax
	mov eax, [rsp+0x48]
	shl eax, 0x5
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x24]
	mov edx, [rsp+0x20]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x30]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x24]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0xA25D7710
	mov [rsp+0x40], eax
	mov eax, [rsp+0x40]
	shl eax, 0x5
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x20]
	mov edx, [rsp+0x30]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x48]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x20]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0xA25D7710
	mov [rsp+0x24], eax
	mov eax, [rsp+0x24]
	shl eax, 0x5
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x30]
	mov edx, [rsp+0x48]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x40]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x30]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0xA25D7710
	mov [rsp+0x20], eax
	mov eax, [rsp+0x20]
	shl eax, 0x5
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x48]
	mov edx, [rsp+0x40]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x24]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x48]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0xA25D7710
	mov [rsp+0x30], eax
	mov eax, [rsp+0x30]
	shl eax, 0x5
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x40]
	mov edx, [rsp+0x24]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x20]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x40]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0xA25D7710
	mov [rsp+0x48], eax
	mov eax, [rsp+0x48]
	shl eax, 0x5
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x24]
	mov edx, [rsp+0x20]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x30]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x24]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0xA25D7710
	mov [rsp+0x40], eax
	mov eax, [rsp+0x40]
	shl eax, 0x5
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x20]
	mov edx, [rsp+0x30]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x48]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x20]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0xA25D7710
	mov [rsp+0x24], eax
	mov eax, [rsp+0x24]
	shl eax, 0x5
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x30]
	mov edx, [rsp+0x48]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x40]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x30]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0xA25D7710
	mov [rsp+0x20], eax
	mov eax, [rsp+0x20]
	shl eax, 0x5
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x48]
	mov edx, [rsp+0x40]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x24]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x48]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0xA25D7710
	mov [rsp+0x30], eax
	mov eax, [rsp+0x30]
	shl eax, 0x5
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x40]
	mov edx, [rsp+0x24]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x20]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x40]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0xA25D7710
	mov [rsp+0x48], eax
	mov eax, [rsp+0x48]
	shl eax, 0x5
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x24]
	mov edx, [rsp+0x20]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x30]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x24]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0xA25D7710
	mov [rsp+0x40], eax
	mov eax, [rsp+0x40]
	shl eax, 0x5
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x20]
	mov edx, [rsp+0x30]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x48]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x20]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0xA25D7710
	mov [rsp+0x24], eax
	mov eax, [rsp+0x24]
	shl eax, 0x5
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x30]
	mov edx, [rsp+0x48]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x40]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x30]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x90]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0xA25D7710
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3F0], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x3F0]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3F0]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0xA25D7710
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x518], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x518]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x518]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0xA25D7710
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3F8], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x3F8]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3F8]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0xA25D7710
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5AC], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x5AC]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5AC]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0xA25D7710
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x400], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x400]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x30]
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	mov edx, [rsp+0x24]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x400]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0x3A368458
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x520], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x520]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x48]
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x520]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0x3A368458
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x408], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x408]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x40]
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x408]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0x3A368458
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5F4], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x5F4]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x24]
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5F4]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0x3A368458
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x410], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x410]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x30]
	mov ecx, [rsp+0x48]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x20]
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x410]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0x3A368458
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x528], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x528]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x30]
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	mov edx, [rsp+0x24]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x528]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0x3A368458
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x418], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x418]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x48]
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x418]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0x3A368458
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x5B4], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x5B4]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x40]
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x5B4]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0x3A368458
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x420], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x420]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x24]
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x420]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0x3A368458
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x530], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x530]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x30]
	mov ecx, [rsp+0x48]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x20]
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x530]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0x3A368458
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x210], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x210]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x30]
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	mov edx, [rsp+0x24]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x210]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0x3A368458
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x214], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x214]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x48]
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x214]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0x3A368458
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x21C], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x21C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x40]
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x21C]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0x3A368458
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x224], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x224]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x24]
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x224]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0x3A368458
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x22C], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x22C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x30]
	mov ecx, [rsp+0x48]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x20]
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x22C]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0x3A368458
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x234], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x234]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x30]
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	mov edx, [rsp+0x24]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x234]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0x3A368458
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x23C], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x23C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x48]
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x23C]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0x3A368458
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x244], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x244]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x40]
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x244]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0x3A368458
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x24C], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x24C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x24]
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x24C]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0x3A368458
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x254], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x254]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x30]
	mov ecx, [rsp+0x48]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x20]
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x254]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0x3A368458
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x25C], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x25C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	mov edx, [rsp+0x40]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	mov edx, [rsp+0x24]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x25C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0xA25D7710
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x264], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x264]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	mov edx, [rsp+0x24]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x264]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0xA25D7710
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x26C], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x26C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	mov edx, [rsp+0x20]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x26C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0xA25D7710
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x274], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x274]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	mov edx, [rsp+0x30]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x274]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0xA25D7710
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x27C], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x27C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x30]
	mov ecx, [rsp+0x48]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	mov edx, [rsp+0x48]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x27C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0xA25D7710
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x284], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x284]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	mov edx, [rsp+0x40]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	mov edx, [rsp+0x24]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x284]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0xA25D7710
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x28C], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x28C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	mov edx, [rsp+0x24]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x28C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0xA25D7710
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x294], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x294]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	mov edx, [rsp+0x20]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x294]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0xA25D7710
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x29C], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x29C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	mov edx, [rsp+0x30]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x29C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0xA25D7710
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2A4], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x2A4]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x30]
	mov ecx, [rsp+0x48]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	mov edx, [rsp+0x48]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2A4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0xA25D7710
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2AC], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x2AC]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	mov edx, [rsp+0x40]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	mov edx, [rsp+0x24]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2AC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0xA25D7710
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2B4], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x2B4]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	mov edx, [rsp+0x24]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2B4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0xA25D7710
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2BC], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x2BC]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	mov edx, [rsp+0x20]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2BC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0xA25D7710
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2C4], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x2C4]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	mov edx, [rsp+0x30]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2C4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0xA25D7710
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2CC], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x2CC]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x30]
	mov ecx, [rsp+0x48]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	mov edx, [rsp+0x48]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2CC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0xA25D7710
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2D4], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x2D4]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	mov edx, [rsp+0x40]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	mov edx, [rsp+0x24]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2D4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0xA25D7710
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2DC], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x2DC]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	mov edx, [rsp+0x24]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2DC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0xA25D7710
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2E4], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x2E4]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	mov edx, [rsp+0x20]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2E4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0xA25D7710
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2EC], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x2EC]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x24]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	mov edx, [rsp+0x30]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2EC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0xA25D7710
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2F4], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x2F4]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x30]
	mov ecx, [rsp+0x48]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x20]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x30]
	mov edx, [rsp+0x48]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2F4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0xA25D7710
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x2FC], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x2FC]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x30]
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	mov edx, [rsp+0x24]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x2FC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0x3A368458
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x304], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x304]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x48]
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x304]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0x3A368458
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x30C], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x30C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x40]
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x30C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0x3A368458
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x314], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x314]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x24]
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x314]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0x3A368458
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x31C], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x31C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x30]
	mov ecx, [rsp+0x48]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x20]
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x31C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0x3A368458
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x324], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x324]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x30]
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	mov edx, [rsp+0x24]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x324]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0x3A368458
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x32C], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x32C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x48]
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x32C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0x3A368458
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x334], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x334]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x40]
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x334]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0x3A368458
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x33C], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x33C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x24]
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x33C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0x3A368458
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x344], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x344]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x30]
	mov ecx, [rsp+0x48]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x20]
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x344]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0x3A368458
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x34C], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x34C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x30]
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	mov edx, [rsp+0x24]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x34C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0x3A368458
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x354], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x354]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x48]
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x354]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0x3A368458
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x35C], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x35C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x40]
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x35C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0x3A368458
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x364], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x364]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x24]
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x364]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0x3A368458
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x36C], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x36C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x30]
	mov ecx, [rsp+0x48]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x20]
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x36C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0x3A368458
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x374], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x374]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x48]
	mov ecx, [rsp+0x40]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x30]
	mov ecx, [rsp+0x24]
	shr ecx, 0x1B
	mov edx, [rsp+0x24]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x374]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x20]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x40]
	shl eax, 0x1E
	mov ecx, [rsp+0x40]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x20]
	sub eax, 0x3A368458
	mov [rsp+0x20], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x37C], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x37C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x40]
	mov ecx, [rsp+0x24]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x48]
	mov ecx, [rsp+0x20]
	shr ecx, 0x1B
	mov edx, [rsp+0x20]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x37C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x30]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x24]
	shl eax, 0x1E
	mov ecx, [rsp+0x24]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x30]
	sub eax, 0x3A368458
	mov [rsp+0x30], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x384], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x384]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x24]
	mov ecx, [rsp+0x20]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x40]
	mov ecx, [rsp+0x30]
	shr ecx, 0x1B
	mov edx, [rsp+0x30]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x384]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x48]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x20]
	shl eax, 0x1E
	mov ecx, [rsp+0x20]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x20], eax
	mov eax, [rsp+0x48]
	sub eax, 0x3A368458
	mov [rsp+0x48], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x38C], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x38C]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x20]
	mov ecx, [rsp+0x30]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x24]
	mov ecx, [rsp+0x48]
	shr ecx, 0x1B
	mov edx, [rsp+0x48]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x38C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x40]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x40], eax
	mov eax, [rsp+0x30]
	shl eax, 0x1E
	mov ecx, [rsp+0x30]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x30], eax
	mov eax, [rsp+0x40]
	sub eax, 0x3A368458
	mov [rsp+0x40], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0x90]
	mov eax, [rsp+rax*1+0x90]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0x90]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0x90]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0x90]
	mov ecx, [rsp+rcx*1+0x90]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0x90]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0x90]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x394], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x394]
	mov [rsp+rax*1+0x90], ecx
	mov eax, [rsp+0x30]
	mov ecx, [rsp+0x48]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x20]
	mov ecx, [rsp+0x40]
	shr ecx, 0x1B
	mov edx, [rsp+0x40]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x394]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x24]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x24], eax
	mov eax, [rsp+0x48]
	shl eax, 0x1E
	mov ecx, [rsp+0x48]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x48], eax
	mov eax, [rsp+0x24]
	sub eax, 0x3A368458
	mov [rsp+0x24], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov rcx, [rsp+0x178]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x48]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov rdx, [rsp+0x178]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov rcx, [rsp+0x178]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x30]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov rdx, [rsp+0x178]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov rcx, [rsp+0x178]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x40]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov rdx, [rsp+0x178]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov rcx, [rsp+0x178]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x20]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov rdx, [rsp+0x178]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov rcx, [rsp+0x178]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x24]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov rdx, [rsp+0x178]
	mov [rdx+rcx*1], eax
	mov dword ptr [rsp+0x1F8], 0x0
	jmp short L00000044

L00000043:
	mov eax, [rsp+0x1F8]
	inc eax
	mov [rsp+0x1F8], eax

L00000044:
	cmp dword ptr [rsp+0x1F8], 0x38
	jnl short L00000045
	movsxd rax, dword ptr [rsp+0x1F8]
	mov byte ptr [rsp+rax*1+0x66C], 0x0
	jmp short L00000043

L00000045:
	jmp short L00000049

L00000046:
	mov dword ptr [rsp+0x1F0], 0x0
	jmp short L00000048

L00000047:
	mov eax, [rsp+0x1F0]
	inc eax
	mov [rsp+0x1F0], eax

L00000048:
	mov eax, [rsp+0x15C]
	sub eax, 0x8
	cmp [rsp+0x1F0], eax
	jnl short L00000049
	movsxd rax, dword ptr [rsp+0x1F0]
	mov rcx, [rsp+0x5E8]
	mov byte ptr [rcx+rax*1], 0x0
	jmp short L00000047

L00000049:
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x654]
	mov [rsp+rax*1+0x66C], ecx
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x650]
	mov [rsp+rax*1+0x66C], ecx
	mov dword ptr [rsp+0x1B8], 0x38
	lea rax, [rsp+0x66C]
	mov [rsp+0x630], rax
	movsxd rax, dword ptr [rsp+0x1B8]
	xor edx, edx
	mov ecx, 0x4
	div rcx
	mov [rsp+0x1B8], eax

L00000050:
	mov eax, [rsp+0x1B8]
	mov [rsp+0x63C], eax
	mov eax, [rsp+0x1B8]
	dec eax
	mov [rsp+0x1B8], eax
	cmp dword ptr [rsp+0x63C], 0x0
	jz short L00000051
	mov rax, [rsp+0x630]
	mov eax, [rax]
	mov [rsp+0x1E8], eax
	mov eax, [rsp+0x1E8]
	and eax, 0xFF00FF00
	shr eax, 0x8
	mov ecx, [rsp+0x1E8]
	and ecx, 0xFF00FF
	shl ecx, 0x8
	or eax, ecx
	mov [rsp+0x1E8], eax
	mov eax, [rsp+0x1E8]
	shl eax, 0x10
	mov ecx, [rsp+0x1E8]
	shr ecx, 0x10
	or eax, ecx
	mov rcx, [rsp+0x630]
	mov [rcx], eax
	mov rax, [rsp+0x630]
	add rax, 0x4
	mov [rsp+0x630], rax
	jmp L00000050

L00000051:
	lea rax, [rsp+0x658]
	mov [rsp+0x170], rax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov rcx, [rsp+0x170]
	mov eax, [rcx+rax*1]
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov rcx, [rsp+0x170]
	mov eax, [rcx+rax*1]
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov rcx, [rsp+0x170]
	mov eax, [rcx+rax*1]
	mov [rsp+0xC], eax
	mov dword ptr [rsp+0x1A0], 0x0
	jmp short L00000053

L00000052:
	mov eax, [rsp+0x1A0]
	inc eax
	mov [rsp+0x1A0], eax

L00000053:
	cmp dword ptr [rsp+0x1A0], 0x10
	jnl short L00000054
	movsxd rax, dword ptr [rsp+0x1A0]
	movsxd rcx, dword ptr [rsp+0x1A0]
	mov eax, [rsp+rax*4+0x66C]
	mov [rsp+rcx*4+0xD0], eax
	jmp short L00000052

L00000054:
	mov eax, 0x4
	imul rax, rax, 0x2
	mov rcx, [rsp+0x170]
	mov eax, [rcx+rax*1]
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov rcx, [rsp+0x170]
	mov eax, [rcx+rax*1]
	mov [rsp+0x4], eax
	mov eax, [rsp+0x14]
	shl eax, 0x5
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp]
	mov edx, [rsp+0x1C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0xA25D7710
	mov [rsp+0xC], eax
	mov eax, [rsp+0xC]
	shl eax, 0x5
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x1C]
	mov edx, [rsp+0x4]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x14]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x1C]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0xA25D7710
	mov [rsp], eax
	mov eax, [rsp]
	shl eax, 0x5
	mov ecx, [rsp]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x4]
	mov edx, [rsp+0x14]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0xC]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0xA25D7710
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x5
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x14]
	mov edx, [rsp+0xC]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x14]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0xA25D7710
	mov [rsp+0x4], eax
	mov eax, [rsp+0x4]
	shl eax, 0x5
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0xC]
	mov edx, [rsp]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x1C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0xC]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0xA25D7710
	mov [rsp+0x14], eax
	mov eax, [rsp+0x14]
	shl eax, 0x5
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp]
	mov edx, [rsp+0x1C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0xA25D7710
	mov [rsp+0xC], eax
	mov eax, [rsp+0xC]
	shl eax, 0x5
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x1C]
	mov edx, [rsp+0x4]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x14]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x1C]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0xA25D7710
	mov [rsp], eax
	mov eax, [rsp]
	shl eax, 0x5
	mov ecx, [rsp]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x4]
	mov edx, [rsp+0x14]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0xC]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0xA25D7710
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x5
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x14]
	mov edx, [rsp+0xC]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x14]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0xA25D7710
	mov [rsp+0x4], eax
	mov eax, [rsp+0x4]
	shl eax, 0x5
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0xC]
	mov edx, [rsp]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x1C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0xC]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0xA25D7710
	mov [rsp+0x14], eax
	mov eax, [rsp+0x14]
	shl eax, 0x5
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp]
	mov edx, [rsp+0x1C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0xA25D7710
	mov [rsp+0xC], eax
	mov eax, [rsp+0xC]
	shl eax, 0x5
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x1C]
	mov edx, [rsp+0x4]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x14]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x1C]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0xA25D7710
	mov [rsp], eax
	mov eax, [rsp]
	shl eax, 0x5
	mov ecx, [rsp]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x4]
	mov edx, [rsp+0x14]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0xC]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0xA25D7710
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x5
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0x14]
	mov edx, [rsp+0xC]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x14]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0xA25D7710
	mov [rsp+0x4], eax
	mov eax, [rsp+0x4]
	shl eax, 0x5
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp+0xC]
	mov edx, [rsp]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x1C]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp+0xC]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0xA25D7710
	mov [rsp+0x14], eax
	mov eax, [rsp+0x14]
	shl eax, 0x5
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	or eax, ecx
	mov ecx, [rsp]
	mov edx, [rsp+0x1C]
	xor edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4]
	and edx, ecx
	mov ecx, edx
	mov edx, [rsp]
	xor edx, ecx
	mov ecx, edx
	add eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0xD0]
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0xA25D7710
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x39C], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x39C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x39C]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0xA25D7710
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3A4], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x3A4]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3A4]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0xA25D7710
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3AC], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x3AC]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3AC]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0xA25D7710
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3B4], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x3B4]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	xor ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3B4]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xFCDFF0A9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0xA25D7710
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3BC], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x3BC]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp]
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	mov edx, [rsp+0x14]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3BC]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0x3A368458
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3C4], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x3C4]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x1C]
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3C4]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0x3A368458
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3CC], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x3CC]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4]
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3CC]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0x3A368458
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3D4], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x3D4]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x14]
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3D4]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0x3A368458
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3DC], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x3DC]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp]
	mov ecx, [rsp+0x1C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0xC]
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3DC]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0x3A368458
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3E4], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x3E4]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp]
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	mov edx, [rsp+0x14]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3E4]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0x3A368458
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3EC], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x3EC]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x1C]
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3EC]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0x3A368458
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3F4], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x3F4]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4]
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3F4]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0x3A368458
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x3FC], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x3FC]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x14]
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x3FC]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0x3A368458
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x404], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x404]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp]
	mov ecx, [rsp+0x1C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0xC]
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x404]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0x3A368458
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x40C], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x40C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp]
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	mov edx, [rsp+0x14]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x40C]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0x3A368458
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x414], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x414]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x1C]
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x414]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0x3A368458
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x41C], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x41C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4]
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x41C]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0x3A368458
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x424], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x424]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x14]
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x424]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0x3A368458
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x42C], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x42C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp]
	mov ecx, [rsp+0x1C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0xC]
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x42C]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0x3A368458
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x434], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x434]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp]
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	mov edx, [rsp+0x14]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x434]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0x3A368458
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x43C], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x43C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x1C]
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x43C]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0x3A368458
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x444], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x444]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4]
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x444]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0x3A368458
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x44C], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x44C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x14]
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x44C]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0x3A368458
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x454], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x454]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp]
	mov ecx, [rsp+0x1C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0xC]
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x454]
	add edx, ecx
	mov ecx, edx
	mov edx, 0xA9106FF9
	lea rax, [rax+rdx*1]
	lea eax, [rax+rcx*1]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0x3A368458
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x45C], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x45C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	mov edx, [rsp+0x4]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	mov edx, [rsp+0x14]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x45C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0xA25D7710
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x464], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x464]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	mov edx, [rsp+0x14]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x464]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0xA25D7710
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x46C], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x46C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	mov edx, [rsp+0xC]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x46C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0xA25D7710
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x474], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x474]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	mov edx, [rsp]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x474]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0xA25D7710
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x47C], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x47C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp]
	mov ecx, [rsp+0x1C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	mov edx, [rsp+0x1C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x47C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0xA25D7710
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x484], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x484]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	mov edx, [rsp+0x4]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	mov edx, [rsp+0x14]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x484]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0xA25D7710
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x48C], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x48C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	mov edx, [rsp+0x14]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x48C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0xA25D7710
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x494], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x494]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	mov edx, [rsp+0xC]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x494]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0xA25D7710
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x49C], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x49C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	mov edx, [rsp]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x49C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0xA25D7710
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4A4], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x4A4]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp]
	mov ecx, [rsp+0x1C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	mov edx, [rsp+0x1C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4A4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0xA25D7710
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4AC], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x4AC]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	mov edx, [rsp+0x4]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	mov edx, [rsp+0x14]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4AC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0xA25D7710
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4B4], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x4B4]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	mov edx, [rsp+0x14]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4B4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0xA25D7710
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4BC], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x4BC]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	mov edx, [rsp+0xC]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4BC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0xA25D7710
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4C4], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x4C4]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	mov edx, [rsp]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4C4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0xA25D7710
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4CC], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x4CC]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp]
	mov ecx, [rsp+0x1C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	mov edx, [rsp+0x1C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4CC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0xA25D7710
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4D4], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x4D4]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	mov edx, [rsp+0x4]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	mov edx, [rsp+0x14]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4D4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0xA25D7710
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4DC], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x4DC]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	mov edx, [rsp+0x14]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4DC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0xA25D7710
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4E4], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x4E4]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	mov edx, [rsp+0xC]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4E4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0xA25D7710
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4EC], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x4EC]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x14]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	mov edx, [rsp]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4EC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0xA25D7710
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4F4], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x4F4]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp]
	mov ecx, [rsp+0x1C]
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0xC]
	and ecx, eax
	mov eax, ecx
	mov ecx, [rsp]
	mov edx, [rsp+0x1C]
	and edx, ecx
	mov ecx, edx
	or ecx, eax
	mov eax, ecx
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4F4]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x317933EC]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0xA25D7710
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x4FC], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x4FC]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp]
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	mov edx, [rsp+0x14]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x4FC]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0x3A368458
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x504], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x504]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x1C]
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x504]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0x3A368458
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x50C], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x50C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4]
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x50C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0x3A368458
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x514], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x514]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x14]
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x514]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0x3A368458
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov edx, 0x4
	imul rdx, rdx, 0x2
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x51C], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov ecx, [rsp+0x51C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp]
	mov ecx, [rsp+0x1C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0xC]
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x51C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0x3A368458
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov edx, 0x4
	imul rdx, rdx, 0x3
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x524], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov ecx, [rsp+0x524]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp]
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	mov edx, [rsp+0x14]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x524]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0x3A368458
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov edx, 0x4
	imul rdx, rdx, 0x4
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x52C], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov ecx, [rsp+0x52C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x1C]
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x52C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0x3A368458
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov edx, 0x4
	imul rdx, rdx, 0x5
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x534], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov ecx, [rsp+0x534]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4]
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x534]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0x3A368458
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov edx, 0x4
	imul rdx, rdx, 0x6
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x53C], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov ecx, [rsp+0x53C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x14]
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x53C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0x3A368458
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	mov edx, 0x4
	imul rdx, rdx, 0x7
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xD
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x544], eax
	mov eax, 0x4
	imul rax, rax, 0x5
	mov ecx, [rsp+0x544]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp]
	mov ecx, [rsp+0x1C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0xC]
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x544]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0x3A368458
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	mov edx, 0x4
	imul rdx, rdx, 0x8
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xE
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x54C], eax
	mov eax, 0x4
	imul rax, rax, 0x6
	mov ecx, [rsp+0x54C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp]
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	mov edx, [rsp+0x14]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x54C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0x3A368458
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	mov edx, 0x4
	imul rdx, rdx, 0x9
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0xF
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x554], eax
	mov eax, 0x4
	imul rax, rax, 0x7
	mov ecx, [rsp+0x554]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x1C]
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x554]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0x3A368458
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	mov edx, 0x4
	imul rdx, rdx, 0xA
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x0
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x55C], eax
	mov eax, 0x4
	imul rax, rax, 0x8
	mov ecx, [rsp+0x55C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4]
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x55C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0x3A368458
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	mov edx, 0x4
	imul rdx, rdx, 0xB
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x1
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x564], eax
	mov eax, 0x4
	imul rax, rax, 0x9
	mov ecx, [rsp+0x564]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x14]
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x564]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0x3A368458
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	mov edx, 0x4
	imul rdx, rdx, 0xC
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x2
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x56C], eax
	mov eax, 0x4
	imul rax, rax, 0xA
	mov ecx, [rsp+0x56C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp]
	mov ecx, [rsp+0x1C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0xC]
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x56C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0x3A368458
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x8
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	mov edx, 0x4
	imul rdx, rdx, 0xD
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x3
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x8
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x574], eax
	mov eax, 0x4
	imul rax, rax, 0xB
	mov ecx, [rsp+0x574]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x1C]
	mov ecx, [rsp+0x4]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp]
	mov ecx, [rsp+0x14]
	shr ecx, 0x1B
	mov edx, [rsp+0x14]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x574]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0xC]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x4]
	shl eax, 0x1E
	mov ecx, [rsp+0x4]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp+0xC]
	sub eax, 0x3A368458
	mov [rsp+0xC], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0x9
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	mov edx, 0x4
	imul rdx, rdx, 0xE
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x4
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0x9
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x57C], eax
	mov eax, 0x4
	imul rax, rax, 0xC
	mov ecx, [rsp+0x57C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x4]
	mov ecx, [rsp+0x14]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x1C]
	mov ecx, [rsp+0xC]
	shr ecx, 0x1B
	mov edx, [rsp+0xC]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x57C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp]
	add ecx, eax
	mov eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x14]
	shl eax, 0x1E
	mov ecx, [rsp+0x14]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp]
	sub eax, 0x3A368458
	mov [rsp], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x5
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xA
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xD
	mov edx, 0x4
	imul rdx, rdx, 0xF
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x5
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xA
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x584], eax
	mov eax, 0x4
	imul rax, rax, 0xD
	mov ecx, [rsp+0x584]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0x14]
	mov ecx, [rsp+0xC]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x4]
	mov ecx, [rsp]
	shr ecx, 0x1B
	mov edx, [rsp]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x584]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x1C]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0xC]
	shl eax, 0x1E
	mov ecx, [rsp+0xC]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0xC], eax
	mov eax, [rsp+0x1C]
	sub eax, 0x3A368458
	mov [rsp+0x1C], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x6
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xB
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xE
	mov edx, 0x4
	imul rdx, rdx, 0x0
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x6
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xB
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x58C], eax
	mov eax, 0x4
	imul rax, rax, 0xE
	mov ecx, [rsp+0x58C]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp+0xC]
	mov ecx, [rsp]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0x14]
	mov ecx, [rsp+0x1C]
	shr ecx, 0x1B
	mov edx, [rsp+0x1C]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x58C]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x4]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x4], eax
	mov eax, [rsp]
	shl eax, 0x1E
	mov ecx, [rsp]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp], eax
	mov eax, [rsp+0x4]
	sub eax, 0x3A368458
	mov [rsp+0x4], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov ecx, [rsp+rcx*1+0xD0]
	mov eax, [rsp+rax*1+0xD0]
	xor eax, ecx
	mov ecx, 0x4
	imul rcx, rcx, 0x7
	xor eax, [rsp+rcx*1+0xD0]
	mov ecx, 0x4
	imul rcx, rcx, 0xC
	xor eax, [rsp+rcx*1+0xD0]
	shl eax, 0x1
	mov ecx, 0x4
	imul rcx, rcx, 0xF
	mov edx, 0x4
	imul rdx, rdx, 0x1
	mov edx, [rsp+rdx*1+0xD0]
	mov ecx, [rsp+rcx*1+0xD0]
	xor ecx, edx
	mov edx, 0x4
	imul rdx, rdx, 0x7
	xor ecx, [rsp+rdx*1+0xD0]
	mov edx, 0x4
	imul rdx, rdx, 0xC
	xor ecx, [rsp+rdx*1+0xD0]
	shr ecx, 0x1F
	or eax, ecx
	mov [rsp+0x594], eax
	mov eax, 0x4
	imul rax, rax, 0xF
	mov ecx, [rsp+0x594]
	mov [rsp+rax*1+0xD0], ecx
	mov eax, [rsp]
	mov ecx, [rsp+0x1C]
	xor ecx, eax
	mov eax, ecx
	xor eax, [rsp+0xC]
	mov ecx, [rsp+0x4]
	shr ecx, 0x1B
	mov edx, [rsp+0x4]
	shl edx, 0x5
	or edx, ecx
	mov ecx, edx
	mov edx, [rsp+0x594]
	add edx, ecx
	mov ecx, edx
	lea eax, [rax+rcx*1+0x499462E]
	mov ecx, [rsp+0x14]
	add ecx, eax
	mov eax, ecx
	mov [rsp+0x14], eax
	mov eax, [rsp+0x1C]
	shl eax, 0x1E
	mov ecx, [rsp+0x1C]
	shr ecx, 0x2
	or eax, ecx
	mov [rsp+0x1C], eax
	mov eax, [rsp+0x14]
	sub eax, 0x3A368458
	mov [rsp+0x14], eax
	mov eax, 0x4
	imul rax, rax, 0x2
	mov rcx, [rsp+0x170]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x1C]
	mov ecx, 0x4
	imul rcx, rcx, 0x2
	mov rdx, [rsp+0x170]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x3
	mov rcx, [rsp+0x170]
	mov eax, [rcx+rax*1]
	add eax, [rsp]
	mov ecx, 0x4
	imul rcx, rcx, 0x3
	mov rdx, [rsp+0x170]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x1
	mov rcx, [rsp+0x170]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x4]
	mov ecx, 0x4
	imul rcx, rcx, 0x1
	mov rdx, [rsp+0x170]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x4
	mov rcx, [rsp+0x170]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0xC]
	mov ecx, 0x4
	imul rcx, rcx, 0x4
	mov rdx, [rsp+0x170]
	mov [rdx+rcx*1], eax
	mov eax, 0x4
	imul rax, rax, 0x0
	mov rcx, [rsp+0x170]
	mov eax, [rcx+rax*1]
	add eax, [rsp+0x14]
	mov ecx, 0x4
	imul rcx, rcx, 0x0
	mov rdx, [rsp+0x170]
	mov [rdx+rcx*1], eax
	mov dword ptr [rsp+0x190], 0x0
	mov dword ptr [rsp+0x180], 0x0
	jmp short L00000056

L00000055:
	mov eax, [rsp+0x190]
	inc eax
	mov [rsp+0x190], eax
	mov eax, [rsp+0x180]
	add eax, 0x4
	mov [rsp+0x180], eax

L00000056:
	cmp dword ptr [rsp+0x180], 0x14
	jnb L00000057
	mov eax, [rsp+0x190]
	mov eax, [rsp+rax*4+0x658]
	and eax, 0xFF
	mov ecx, [rsp+0x180]
	add ecx, 0x3
	mov ecx, ecx
	mov rdx, [rsp+0x6D0]
	mov [rdx+rcx*1], al
	mov eax, [rsp+0x190]
	mov eax, [rsp+rax*4+0x658]
	shr eax, 0x8
	and eax, 0xFF
	mov ecx, [rsp+0x180]
	add ecx, 0x2
	mov ecx, ecx
	mov rdx, [rsp+0x6D0]
	mov [rdx+rcx*1], al
	mov eax, [rsp+0x190]
	mov eax, [rsp+rax*4+0x658]
	shr eax, 0x10
	and eax, 0xFF
	mov ecx, [rsp+0x180]
	inc ecx
	mov ecx, ecx
	mov rdx, [rsp+0x6D0]
	mov [rdx+rcx*1], al
	mov eax, [rsp+0x190]
	mov eax, [rsp+rax*4+0x658]
	shr eax, 0x18
	and eax, 0xFF
	mov ecx, [rsp+0x180]
	mov rdx, [rsp+0x6D0]
	mov [rdx+rcx*1], al
	jmp L00000055

L00000057:
	mov dword ptr [rsp+0x1FC], 0x0
	jmp short L00000059

L00000058:
	mov eax, [rsp+0x1FC]
	inc eax
	mov [rsp+0x1FC], eax

L00000059:
	movsxd rax, dword ptr [rsp+0x1FC]
	cmp rax, 0x8
	jnb short L00000060
	movsxd rax, dword ptr [rsp+0x1FC]
	mov byte ptr [rsp+rax*1+0x650], 0x0
	jmp short L00000058

L00000060:
	mov rax, [rsp+0x6E8]
	mov eax, [rax]
	inc eax
	mov rcx, [rsp+0x6E8]
	mov [rcx], eax
	add rsp, 0x6C8
	ret
 
	}
}